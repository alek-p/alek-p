%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:33:33 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/dicts/DISK.dict)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    1285 Sat Apr 29 19:33:31 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/dicts/DISK.dict)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (#)S
625.26 Z
3 T (2)S 1 T (# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.)S
614.74 Z
3 T (3)S 1 T (# Use is subject to license terms.)S
FRB
0 601.05 540 611.58 SHD
604.21 Z
FRN
3 T (4)S 1 T FRB
(# Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
593.68 Z
3 T (5)S 1 T (#)S
583.16 Z
3 T (6)S 1 T (# CDDL HEADER START)S
572.63 Z
3 T (7)S 1 T (#)S
562.11 Z
3 T (8)S 1 T (# The contents of this file are subject to the terms of the)S
551.58 Z
3 T (9)S 1 T (# Common Development and Distribution License \(the "License"\).)S
541.05 Z
2 T (10)S 1 T (# You may not use this file except in compliance with the License.)S
530.53 Z
2 T (11)S 1 T (#)S
520.00 Z
2 T (12)S 1 T (# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
509.47 Z
2 T (13)S 1 T (# or http://www.opensolaris.org/os/licensing.)S
498.95 Z
2 T (14)S 1 T (# See the License for the specific language governing permissions)S
488.42 Z
2 T (15)S 1 T (# and limitations under the License.)S
477.89 Z
2 T (16)S 1 T (#)S
467.37 Z
2 T (17)S 1 T (# When distributing Covered Code, include this CDDL HEADER in each)S
456.84 Z
2 T (18)S 1 T (# file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
446.32 Z
2 T (19)S 1 T (# If applicable, add the following below this CDDL HEADER, with the)S
435.79 Z
2 T (20)S 1 T (# fields enclosed by brackets "[]" replaced with your own identifying)S
425.26 Z
2 T (21)S 1 T (# information: Portions Copyright [yyyy] [name of copyright owner])S
414.74 Z
2 T (22)S 1 T (#)S
404.21 Z
2 T (23)S 1 T (# CDDL HEADER END)S
393.68 Z
2 T (24)S 1 T (#)S
383.16 Z
2 T (25)S 1 T (#)S
372.63 Z
2 T (26)S 1 T (# DO NOT EDIT -- this file is generated by the Event Registry.)S
362.11 Z
2 T (27)S 1 T (#)S
341.05 Z
2 T (29)S 1 T (FMDICT: name=DISK version=1 maxkey=1 dictid=0x534b)S
320.00 Z
2 T (31)S 1 T (fault.io.disk.predictive-failure=0)S
309.47 Z
2 T (32)S 1 T (fault.io.disk.over-temperature=1)S
298.95 Z
2 T (33)S 1 T (fault.io.disk.self-test-failure=2)S
288.42 Z
2 T (34)S 1 T (fault.io.scsi.cmd.disk.dev.rqs.derr=3)S
277.90 Z
2 T (35)S 1 T (fault.io.scsi.cmd.disk.dev.rqs.merr=4)S
FRB
0 264.21 540 274.74 SHD
267.37 Z
FRN
2 T (36)S 1 T FRB
(fault.io.disk.ssm-wearout=8)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 1
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:33:37 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/dicts/DISK.po)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    5031 Sat Apr 29 19:33:34 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/dicts/DISK.po)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (#)S
625.26 Z
3 T (2)S 1 T (# Copyright 2008 Sun Microsystems, Inc.  All rights reserved.)S
614.74 Z
3 T (3)S 1 T (# Use is subject to license terms.)S
FRB
0 601.05 540 611.58 SHD
604.21 Z
FRN
3 T (4)S 1 T FRB
(# Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
593.68 Z
3 T (5)S 1 T (#)S
583.16 Z
3 T (6)S 1 T (# CDDL HEADER START)S
572.63 Z
3 T (7)S 1 T (#)S
562.11 Z
3 T (8)S 1 T (# The contents of this file are subject to the terms of the)S
551.58 Z
3 T (9)S 1 T (# Common Development and Distribution License \(the "License"\).)S
541.05 Z
2 T (10)S 1 T (# You may not use this file except in compliance with the License.)S
530.53 Z
2 T (11)S 1 T (#)S
520.00 Z
2 T (12)S 1 T (# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
509.47 Z
2 T (13)S 1 T (# or http://www.opensolaris.org/os/licensing.)S
498.95 Z
2 T (14)S 1 T (# See the License for the specific language governing permissions)S
488.42 Z
2 T (15)S 1 T (# and limitations under the License.)S
477.89 Z
2 T (16)S 1 T (#)S
467.37 Z
2 T (17)S 1 T (# When distributing Covered Code, include this CDDL HEADER in each)S
456.84 Z
2 T (18)S 1 T (# file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
446.32 Z
2 T (19)S 1 T (# If applicable, add the following below this CDDL HEADER, with the)S
435.79 Z
2 T (20)S 1 T (# fields enclosed by brackets "[]" replaced with your own identifying)S
425.26 Z
2 T (21)S 1 T (# information: Portions Copyright [yyyy] [name of copyright owner])S
414.74 Z
2 T (22)S 1 T (#)S
404.21 Z
2 T (23)S 1 T (# CDDL HEADER END)S
393.68 Z
2 T (24)S 1 T (#)S
383.16 Z
2 T (25)S 1 T (#)S
372.63 Z
2 T (26)S 1 T (# DO NOT EDIT -- this file is generated by the Event Registry.)S
362.11 Z
2 T (27)S 1 T (#)S
351.58 Z
2 T (28)S 1 T (#)S
341.05 Z
2 T (29)S 1 T (# code: DISK-8000-0X)S
330.53 Z
2 T (30)S 1 T (# keys: fault.io.disk.predictive-failure)S
320.00 Z
2 T (31)S 1 T (#)S
309.47 Z
2 T (32)S 1 T (msgid "DISK-8000-0X.type")S
298.95 Z
2 T (33)S 1 T (msgstr "Fault")S
288.42 Z
2 T (34)S 1 T (msgid "DISK-8000-0X.severity")S
277.90 Z
2 T (35)S 1 T (msgstr "Major")S
267.37 Z
2 T (36)S 1 T (msgid "DISK-8000-0X.description")S
256.84 Z
2 T (37)S 1 T (msgstr "SMART health-monitoring firmware reported that a disk\\nfailure is immine)S
246.32 Z
2 T (38)S 1 T (msgid "DISK-8000-0X.response")S
235.79 Z
2 T (39)S 1 T (msgstr "None.\\n")S
225.26 Z
2 T (40)S 1 T (msgid "DISK-8000-0X.impact")S
214.74 Z
2 T (41)S 1 T (msgstr "It is likely that the continued operation of\\nthis disk will result in d)S
204.21 Z
2 T (42)S 1 T (msgid "DISK-8000-0X.action")S
193.68 Z
2 T (43)S 1 T (msgstr "Schedule a repair procedure to replace the affected disk.\\nUse fmdump -v)S
183.16 Z
2 T (44)S 1 T (#)S
172.63 Z
2 T (45)S 1 T (# code: DISK-8000-12)S
162.11 Z
2 T (46)S 1 T (# keys: fault.io.disk.over-temperature)S
151.58 Z
2 T (47)S 1 T (#)S
141.05 Z
2 T (48)S 1 T (msgid "DISK-8000-12.type")S
130.53 Z
2 T (49)S 1 T (msgstr "Fault")S
120.00 Z
2 T (50)S 1 T (msgid "DISK-8000-12.severity")S
109.47 Z
2 T (51)S 1 T (msgstr "Major")S
98.95 Z
2 T (52)S 1 T (msgid "DISK-8000-12.description")S
88.42 Z
2 T (53)S 1 T (msgstr "A disk's temperature exceeded the limits established by\\nits manufacture)S
77.90 Z
2 T (54)S 1 T (msgid "DISK-8000-12.response")S
67.37 Z
2 T (55)S 1 T (msgstr "None.\\n")S
56.84 Z
2 T (56)S 1 T (msgid "DISK-8000-12.impact")S
46.32 Z
2 T (57)S 1 T (msgstr "Performance degradation is likely and continued disk operation\\nbeyond t)S
35.79 Z
2 T (58)S 1 T (msgid "DISK-8000-12.action")S
25.26 Z
2 T (59)S 1 T (msgstr "Ensure that the system is properly cooled, that all fans are\\nfunctional)S
14.74 Z
2 T (60)S 1 T (#)S
4.21 Z
2 T (61)S 1 T (# code: DISK-8000-2J)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/dicts/DISK.po)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (62)S 1 T (# keys: fault.io.disk.self-test-failure)S
677.89 Z
2 T (63)S 1 T (#)S
667.37 Z
2 T (64)S 1 T (msgid "DISK-8000-2J.type")S
656.84 Z
2 T (65)S 1 T (msgstr "Fault")S
646.32 Z
2 T (66)S 1 T (msgid "DISK-8000-2J.severity")S
635.79 Z
2 T (67)S 1 T (msgstr "Critical")S
625.26 Z
2 T (68)S 1 T (msgid "DISK-8000-2J.description")S
614.74 Z
2 T (69)S 1 T (msgstr "One or more disk self tests failed.\\n  Refer to %s for more information.)S
604.21 Z
2 T (70)S 1 T (msgid "DISK-8000-2J.response")S
593.68 Z
2 T (71)S 1 T (msgstr "None.\\n")S
583.16 Z
2 T (72)S 1 T (msgid "DISK-8000-2J.impact")S
572.63 Z
2 T (73)S 1 T (msgstr "The disk has failed.\\n")S
562.11 Z
2 T (74)S 1 T (msgid "DISK-8000-2J.action")S
551.58 Z
2 T (75)S 1 T (msgstr "Schedule a repair procedure to replace the affected disk.\\nUse fmdump -v)S
541.05 Z
2 T (76)S 1 T (#)S
530.53 Z
2 T (77)S 1 T (# code: DISK-8000-3E)S
520.00 Z
2 T (78)S 1 T (# keys: fault.io.scsi.cmd.disk.dev.rqs.derr)S
509.47 Z
2 T (79)S 1 T (#)S
498.95 Z
2 T (80)S 1 T (msgid "DISK-8000-3E.type")S
488.42 Z
2 T (81)S 1 T (msgstr "Fault")S
477.89 Z
2 T (82)S 1 T (msgid "DISK-8000-3E.severity")S
467.37 Z
2 T (83)S 1 T (msgstr "Critical")S
456.84 Z
2 T (84)S 1 T (msgid "DISK-8000-3E.description")S
446.32 Z
2 T (85)S 1 T (msgstr "A non-recoverable hardware failure was detected by the device while perf)S
435.79 Z
2 T (86)S 1 T (msgid "DISK-8000-3E.response")S
425.26 Z
2 T (87)S 1 T (msgstr "The device may be offlined or degraded.\\n")S
414.74 Z
2 T (88)S 1 T (msgid "DISK-8000-3E.impact")S
404.21 Z
2 T (89)S 1 T (msgstr "The device has failed. The service may have been lost or degraded.\\n")S
393.68 Z
2 T (90)S 1 T (msgid "DISK-8000-3E.action")S
383.16 Z
2 T (91)S 1 T (msgstr "Ensure that the latest drivers and patches are installed. Schedule a rep)S
372.63 Z
2 T (92)S 1 T (#)S
362.11 Z
2 T (93)S 1 T (# code: DISK-8000-4Q)S
351.58 Z
2 T (94)S 1 T (# keys: fault.io.scsi.cmd.disk.dev.rqs.merr)S
341.05 Z
2 T (95)S 1 T (#)S
330.53 Z
2 T (96)S 1 T (msgid "DISK-8000-4Q.type")S
320.00 Z
2 T (97)S 1 T (msgstr "Fault")S
309.47 Z
2 T (98)S 1 T (msgid "DISK-8000-4Q.severity")S
298.95 Z
2 T (99)S 1 T (msgstr "Critical")S
288.42 Z
1 T (100)S 1 T (msgid "DISK-8000-4Q.description")S
277.90 Z
1 T (101)S 1 T (msgstr "The command was terminated with a non-recovered error condition that may)S
267.37 Z
1 T (102)S 1 T (msgid "DISK-8000-4Q.response")S
256.84 Z
1 T (103)S 1 T (msgstr "The device may be offlined or degraded.\\n")S
246.32 Z
1 T (104)S 1 T (msgid "DISK-8000-4Q.impact")S
235.79 Z
1 T (105)S 1 T (msgstr "It is likely that continued operation will result in data corruption, wh)S
225.26 Z
1 T (106)S 1 T (msgid "DISK-8000-4Q.action")S
214.74 Z
1 T (107)S 1 T (msgstr "Schedule a repair procedure to replace the affected device. Use 'fmadm f)S
FRB
0 201.05 540 211.58 SHD
204.21 Z
FRN
1 T (108)S 1 T FRB
(#)S
0 190.53 540 201.05 SHD
193.68 Z
FRN
1 T (109)S 1 T FRB
(# code: DISK-8000-8D)S
0 180.00 540 190.53 SHD
183.16 Z
FRN
1 T (110)S 1 T FRB
(# keys: fault.io.disk.ssm-wearout)S
0 169.47 540 180.00 SHD
172.63 Z
FRN
1 T (111)S 1 T FRB
(#)S
0 158.95 540 169.47 SHD
162.11 Z
FRN
1 T (112)S 1 T FRB
(msgid "DISK-8000-8D.type")S
0 148.42 540 158.95 SHD
151.58 Z
FRN
1 T (113)S 1 T FRB
(msgstr "Fault")S
0 137.90 540 148.42 SHD
141.05 Z
FRN
1 T (114)S 1 T FRB
(msgid "DISK-8000-8D.severity")S
0 127.37 540 137.90 SHD
130.53 Z
FRN
1 T (115)S 1 T FRB
(msgstr "Major")S
0 116.84 540 127.37 SHD
120.00 Z
FRN
1 T (116)S 1 T FRB
(msgid "DISK-8000-8D.description")S
0 106.32 540 116.84 SHD
109.47 Z
FRN
1 T (117)S 1 T FRB
(msgstr "A solid state media device is nearing end of life as projected by the ma)S
0 95.79 540 106.32 SHD
98.95 Z
FRN
1 T (118)S 1 T FRB
(msgid "DISK-8000-8D.response")S
0 85.26 540 95.79 SHD
88.42 Z
FRN
1 T (119)S 1 T FRB
(msgstr "None.")S
0 74.74 540 85.26 SHD
77.90 Z
FRN
1 T (120)S 1 T FRB
(msgid "DISK-8000-8D.impact")S
0 64.21 540 74.74 SHD
67.37 Z
FRN
1 T (121)S 1 T FRB
(msgstr "Performance degradation is likely and continued operation of this device)S
0 53.68 540 64.21 SHD
56.84 Z
FRN
1 T (122)S 1 T FRB
(msgid "DISK-8000-8D.action")S
0 43.16 540 53.68 SHD
46.32 Z
FRN
1 T (123)S 1 T FRB
(msgstr "Schedule a repair procedure to replace the affected drive.\\nUse fmdump -)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 1
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:33:41 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/eversholt/files/common/disk.esc)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    7673 Sat Apr 29 19:33:38 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/eversholt/files/common/disk.esc)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
425.26 Z
2 T (21)S 1 T (/*)S
414.74 Z
2 T (22)S 1 T ( * Copyright \(c\) 2007, 2010, Oracle and/or its affiliates. All rights reserved.)S
FRB
0 401.05 540 411.58 SHD
404.21 Z
FRN
2 T (23)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
393.68 Z
2 T (24)S 1 T ( */)S
372.63 Z
2 T (26)S 1 T (#pragma dictionary "DISK")S
351.58 Z
2 T (28)S 1 T (#define)S 1 T (P)S 23 T (disk)S
330.53 Z
2 T (30)S 1 T (fru P;)S
320.00 Z
2 T (31)S 1 T (asru P;)S
298.95 Z
2 T (33)S 1 T (/*)S
288.42 Z
2 T (34)S 1 T ( * Over all comments for this file:)S
277.90 Z
2 T (35)S 1 T ( * <disk-as-detector> The disk-as-detector DE provides the mapping between)S
267.37 Z
2 T (36)S 1 T ( * ereports generated by a kernel disk driver sd\(7D\) and resulting faults.)S
256.84 Z
2 T (37)S 1 T ( */)S
235.79 Z
2 T (39)S 1 T (/*)S
225.26 Z
2 T (40)S 1 T ( * SERD engine for media error fault propagation:)S
214.74 Z
2 T (41)S 1 T ( *)S
204.21 Z
2 T (42)S 1 T ( * This strategy is designed to give a file system, like ZFS, the)S
193.68 Z
2 T (43)S 1 T ( * ability to attempt data recovery/relocation without faulting a disk.)S
183.16 Z
2 T (44)S 1 T ( * This implementation depends on a file system retry to the same lba)S
172.63 Z
2 T (45)S 1 T ( * to trigger a fault when recovery/relocation is not possible.)S
162.11 Z
2 T (46)S 1 T ( *)S
151.58 Z
2 T (47)S 1 T ( * We let the engine propagate one error only once every 1 minute and then if we)S
FRB
0 137.90 540 148.42 SHD
141.05 Z
FRN
2 T (48)S 1 T FRB
( * still get 2 or more errors within 24 hours for the same LBA,)S
0 127.37 540 137.90 SHD
130.53 Z
FRN
2 T (49)S 1 T FRB
( * there is a fault.)S
FIN
0 116.84 540 127.37 SHD
120.00 Z
FRN
2 T (47)S 1 T FIN
( * still get 2 or more * errors within 24 hours for the same LBA, there is a fau)S
FRN
109.47 Z
2 T (50)S 1 T ( */)S
98.95 Z
2 T (51)S 1 T (engine serd.io.scsi.cmd.disk.dev.rqs.merr@P, N=1, T=24h;)S
77.90 Z
2 T (53)S 1 T (/*)S
67.37 Z
2 T (54)S 1 T ( * disk-as-detector: fault events.)S
56.84 Z
2 T (55)S 1 T ( */)S
46.32 Z
2 T (56)S 1 T (event fault.io.scsi.cmd.disk.dev.rqs.derr@P;)S
35.79 Z
2 T (57)S 1 T (event fault.io.scsi.cmd.disk.dev.rqs.merr@P,)S
25.26 Z
2 T (58)S 1 T (    engine=serd.io.scsi.cmd.disk.dev.rqs.merr@P;)S
4.21 Z
2 T (60)S 1 T (/*)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/eversholt/files/common/disk.esc)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (61)S 1 T ( * The uderr fault will be defined at some future time.)S
677.89 Z
2 T (62)S 1 T ( * event fault.io.scsi.cmd.disk.dev.uderr@P;)S
667.37 Z
2 T (63)S 1 T ( */)S
646.32 Z
2 T (65)S 1 T (/*)S
635.79 Z
2 T (66)S 1 T ( * disk-as-detector: upset events.)S
625.26 Z
2 T (67)S 1 T ( * NOTE: For now we define an upset to implement discard.)S
614.74 Z
2 T (68)S 1 T ( */)S
604.21 Z
2 T (69)S 1 T (event upset.io.scsi.cmd.disk.dev.rqs.derr@P;)S
593.68 Z
2 T (70)S 1 T (event upset.io.scsi.cmd.disk.dev.rqs.merr@P;)S
583.16 Z
2 T (71)S 1 T (event upset.io.scsi.cmd.disk.dev.uderr@P;)S
572.63 Z
2 T (72)S 1 T (event upset.io.scsi.cmd.disk.dev.serr@P;)S
562.11 Z
2 T (73)S 1 T (event upset.io.scsi.cmd.disk.tran@P;)S
551.58 Z
2 T (74)S 1 T (event upset.io.scsi.cmd.disk.recovered@P;)S
530.53 Z
2 T (76)S 1 T (/*)S
520.00 Z
2 T (77)S 1 T ( * disk-as-detector: ereports from the kernel.)S
509.47 Z
2 T (78)S 1 T ( *)S
498.95 Z
2 T (79)S 1 T ( * We don't know the topology for all scsi disks, but the kernel will always)S
488.42 Z
2 T (80)S 1 T ( * generate ereport telemetry assuming that we do. We define these ereports)S
477.89 Z
2 T (81)S 1 T ( * with 'discard_if_config_unknown=1', which permits ereports against things)S
467.37 Z
2 T (82)S 1 T ( * with unknown topology to be silently discarded.  The ereport data is logged)S
456.84 Z
2 T (83)S 1 T ( * in either case, and can be viewed via 'fmdump -eV'.)S
446.32 Z
2 T (84)S 1 T ( */)S
435.79 Z
2 T (85)S 1 T (event ereport.io.scsi.cmd.disk.dev.rqs.derr@P, discard_if_config_unknown=1;)S
425.26 Z
2 T (86)S 1 T (event ereport.io.scsi.cmd.disk.dev.rqs.merr@P, discard_if_config_unknown=1;)S
414.74 Z
2 T (87)S 1 T (event ereport.io.scsi.cmd.disk.dev.serr@P, discard_if_config_unknown=1;)S
404.21 Z
2 T (88)S 1 T (event ereport.io.scsi.cmd.disk.dev.uderr@P, discard_if_config_unknown=1;)S
393.68 Z
2 T (89)S 1 T (event ereport.io.scsi.cmd.disk.recovered@P, discard_if_config_unknown=1;)S
383.16 Z
2 T (90)S 1 T (event ereport.io.scsi.cmd.disk.tran@P, discard_if_config_unknown=1;)S
362.11 Z
2 T (92)S 1 T (/*)S
351.58 Z
2 T (93)S 1 T ( * For some ereports we let the 'driver-assessment', communicated as part of)S
341.05 Z
2 T (94)S 1 T ( * the ereport payload, determine fault .vs. upset via propagation constraints.)S
330.53 Z
2 T (95)S 1 T ( */)S
320.00 Z
2 T (96)S 1 T (#define DRIVER_ASSESSMENT_FATAL)S 9 T (\\)S
309.47 Z
2 T (97)S 1 T 8 T (    \(payloadprop_contains\("driver-assessment", "fatal"\)\))S
298.95 Z
2 T (98)S 1 T (#define DRIVER_ASSESSMENT_NONFATAL)S 6 T (\(!DRIVER_ASSESSMENT_FATAL\))S
277.90 Z
1 T (100)S 1 T (/*)S
267.37 Z
1 T (101)S 1 T ( * disk-as-detector: propagations from faults\(based on)S
256.84 Z
1 T (102)S 1 T ( * DRIVER_ASSESSMENT_FATAL\).)S
246.32 Z
1 T (103)S 1 T ( * We need to set additional fault payloads to indicate fault details.)S
235.79 Z
1 T (104)S 1 T ( * The payload we may need are listed as following:)S
225.26 Z
1 T (105)S 1 T ( * fault.io.scsi.cmd.disk.dev.rqs.derr)S
214.74 Z
1 T (106)S 1 T ( *     op_code, key, asc, ascq)S
204.21 Z
1 T (107)S 1 T ( * fault.io.scsi.cmd.disk.dev.rqs.merr)S
193.68 Z
1 T (108)S 1 T ( *     op_code, key, asc, ascq, lba)S
183.16 Z
1 T (109)S 1 T ( */)S
172.63 Z
1 T (110)S 1 T (prop fault.io.scsi.cmd.disk.dev.rqs.derr@P->)S
162.11 Z
1 T (111)S 1 T (    ereport.io.scsi.cmd.disk.dev.rqs.derr@P{ DRIVER_ASSESSMENT_FATAL &&)S
151.58 Z
1 T (112)S 1 T (    setpayloadprop\("key", payloadprop\("key"\)\) &&)S
141.05 Z
1 T (113)S 1 T (    setpayloadprop\("asc", payloadprop\("asc"\)\) &&)S
130.53 Z
1 T (114)S 1 T (    setpayloadprop\("ascq", payloadprop\("ascq"\)\)};)S
109.47 Z
1 T (116)S 1 T (/*)S
98.95 Z
1 T (117)S 1 T ( * Utilize setserdsuffix with specific LBA, )S
88.42 Z
1 T (118)S 1 T ( * the serd engine would only trigger if the fault recurred on the same LBA)S
77.90 Z
1 T (119)S 1 T ( */)S
67.37 Z
1 T (120)S 1 T (prop fault.io.scsi.cmd.disk.dev.rqs.merr@P->)S
56.84 Z
1 T (121)S 1 T (    ereport.io.scsi.cmd.disk.dev.rqs.merr@P{ DRIVER_ASSESSMENT_FATAL &&)S
46.32 Z
1 T (122)S 1 T (    setserdsuffix\(payloadprop\("lba"\)\) &&)S
35.79 Z
1 T (123)S 1 T (    setpayloadprop\("key", payloadprop\("key"\)\) &&)S
25.26 Z
1 T (124)S 1 T (    setpayloadprop\("asc", payloadprop\("asc"\)\) &&)S
14.74 Z
1 T (125)S 1 T (    setpayloadprop\("ascq", payloadprop\("ascq"\)\) &&)S
4.21 Z
1 T (126)S 1 T (    setpayloadprop\("lba", payloadprop\("lba"\)\)};)S
EPG
1 FPG
%%Page: ? 2
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/eversholt/files/common/disk.esc)S
530 709.47 M (3)S
FRN
677.89 Z
1 T (128)S 1 T (/*)S
667.37 Z
1 T (129)S 1 T ( * NOTE: this propagation uses the "may" propagation of eversholt.)S
656.84 Z
1 T (130)S 1 T ( * The ereport need never exist. It's just a way of making)S
646.32 Z
1 T (131)S 1 T ( * the diagnosis wait for the within time on that ereport)S
635.79 Z
1 T (132)S 1 T ( * to complete. Once it has completed the diagnosis continues)S
625.26 Z
1 T (133)S 1 T ( * even though the dummy ereport didn't occur.)S
614.74 Z
1 T (134)S 1 T ( */)S
604.21 Z
1 T (135)S 1 T (event ereport.io.scsi.cmd.disk.dev.rqs.merr.dummy@P {within\(60s\)};)S
593.68 Z
1 T (136)S 1 T (prop fault.io.scsi.cmd.disk.dev.rqs.merr@P \(0\) ->)S
583.16 Z
1 T (137)S 1 T 8 T (ereport.io.scsi.cmd.disk.dev.rqs.merr.dummy@P;)S
562.11 Z
1 T (139)S 1 T (/*)S
551.58 Z
1 T (140)S 1 T ( * The uderr fault will be propagated at some future time.)S
541.05 Z
1 T (141)S 1 T ( * prop fault.io.scsi.cmd.disk.dev.uderr@P->)S
530.53 Z
1 T (142)S 1 T ( *     ereport.io.scsi.cmd.disk.dev.uderr@P{ DRIVER_ASSESSMENT_FATAL };)S
520.00 Z
1 T (143)S 1 T ( */)S
498.95 Z
1 T (145)S 1 T (/*)S
488.42 Z
1 T (146)S 1 T ( * disk-as-detector: propagations from upsets\(based on)S
477.89 Z
1 T (147)S 1 T ( * DRIVER_ASSESSMENT_NONFATAL\).)S
467.37 Z
1 T (148)S 1 T ( */)S
456.84 Z
1 T (149)S 1 T (prop upset.io.scsi.cmd.disk.dev.rqs.derr@P->)S
446.32 Z
1 T (150)S 1 T (    ereport.io.scsi.cmd.disk.dev.rqs.derr@P{ DRIVER_ASSESSMENT_NONFATAL };)S
425.26 Z
1 T (152)S 1 T (prop upset.io.scsi.cmd.disk.dev.rqs.merr@P->)S
414.74 Z
1 T (153)S 1 T (    ereport.io.scsi.cmd.disk.dev.rqs.merr@P{ DRIVER_ASSESSMENT_NONFATAL };)S
393.68 Z
1 T (155)S 1 T (/*)S
383.16 Z
1 T (156)S 1 T ( * disk-as-detector: propagations from upsets\(independent of)S
372.63 Z
1 T (157)S 1 T ( * driver-assessment\))S
362.11 Z
1 T (158)S 1 T ( */)S
341.05 Z
1 T (160)S 1 T (prop upset.io.scsi.cmd.disk.dev.serr@P->)S
330.53 Z
1 T (161)S 1 T (    ereport.io.scsi.cmd.disk.dev.serr@P;)S
309.47 Z
1 T (163)S 1 T (prop upset.io.scsi.cmd.disk.dev.uderr@P->)S
298.95 Z
1 T (164)S 1 T (    ereport.io.scsi.cmd.disk.dev.uderr@P;)S
277.90 Z
1 T (166)S 1 T (prop upset.io.scsi.cmd.disk.recovered@P->)S
267.37 Z
1 T (167)S 1 T (    ereport.io.scsi.cmd.disk.recovered@P;)S
246.32 Z
1 T (169)S 1 T (prop upset.io.scsi.cmd.disk.tran@P->)S
235.79 Z
1 T (170)S 1 T (    ereport.io.scsi.cmd.disk.tran@P;)S
214.74 Z
1 T (172)S 1 T (/*)S
204.21 Z
1 T (173)S 1 T ( * --------------------------------------)S
193.68 Z
1 T (174)S 1 T ( * The remainder of this file contains rules associated with the operation of)S
183.16 Z
1 T (175)S 1 T ( * cmd/fm/modules/common/disk-monitor/disk_monitor.c code.)S
172.63 Z
1 T (176)S 1 T ( * )S
162.11 Z
1 T (177)S 1 T ( * The disk DE provides a very simple 1-to-1 mapping between SCSI disk events)S
151.58 Z
1 T (178)S 1 T ( * generated by the disk-transport fmd module, and the resulting faults.)S
141.05 Z
1 T (179)S 1 T ( */)S
120.00 Z
1 T (181)S 1 T (/*)S
109.47 Z
1 T (182)S 1 T ( * Fault events.)S
98.95 Z
1 T (183)S 1 T ( */)S
88.42 Z
1 T (184)S 1 T (event fault.io.disk.over-temperature@P,)S
77.90 Z
1 T (185)S 1 T (    FITrate=10, FRU=P, ASRU=P;)S
67.37 Z
1 T (186)S 1 T (event fault.io.disk.predictive-failure@P, FITrate=10,)S
56.84 Z
1 T (187)S 1 T (    FITrate=10, FRU=P, ASRU=P;)S
46.32 Z
1 T (188)S 1 T (event fault.io.disk.self-test-failure@P, FITrate=10,)S
35.79 Z
1 T (189)S 1 T (    FITrate=10, FRU=P, ASRU=P;)S
FRB
0 22.11 540 32.63 SHD
25.26 Z
FRN
1 T (190)S 1 T FRB
(event fault.io.disk.ssm-wearout@P;)S
FRN
4.21 Z
1 T (192)S 1 T (/*)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/eversholt/files/common/disk.esc)S
530 709.47 M (4)S
FRN
688.42 Z
1 T (193)S 1 T ( * ereports.)S
677.89 Z
1 T (194)S 1 T ( */)S
667.37 Z
1 T (195)S 1 T (event ereport.io.scsi.disk.over-temperature@P;)S
656.84 Z
1 T (196)S 1 T (event ereport.io.scsi.disk.predictive-failure@P;)S
646.32 Z
1 T (197)S 1 T (event ereport.io.scsi.disk.self-test-failure@P;)S
FRB
0 632.63 540 643.16 SHD
635.79 Z
FRN
1 T (198)S 1 T FRB
(event ereport.io.scsi.disk.ssm-wearout@P;)S
FRN
614.74 Z
1 T (200)S 1 T (/*)S
604.21 Z
1 T (201)S 1 T ( * Propagations.)S
593.68 Z
1 T (202)S 1 T ( */)S
583.16 Z
1 T (203)S 1 T (prop fault.io.disk.over-temperature@P ->)S
572.63 Z
1 T (204)S 1 T (    ereport.io.scsi.disk.over-temperature@P;)S
551.58 Z
1 T (206)S 1 T (prop fault.io.disk.self-test-failure@P ->)S
541.05 Z
1 T (207)S 1 T (    ereport.io.scsi.disk.self-test-failure@P;)S
520.00 Z
1 T (209)S 1 T (prop fault.io.disk.predictive-failure@P ->)S
509.47 Z
1 T (210)S 1 T (    ereport.io.scsi.disk.predictive-failure@P {)S
498.95 Z
1 T (211)S 1 T (    setpayloadprop\("asc", payloadprop\("additional-sense-code"\)\) &&)S
488.42 Z
1 T (212)S 1 T (    setpayloadprop\("ascq", payloadprop\("additional-sense-code-qualifier"\)\) };)S
FRB
0 474.74 540 485.26 SHD
0 464.21 540 474.74 SHD
467.37 Z
FRN
1 T (214)S 1 T FRB
(prop fault.io.disk.ssm-wearout@P ->)S
0 453.68 540 464.21 SHD
456.84 Z
FRN
1 T (215)S 1 T FRB
(    ereport.io.scsi.disk.ssm-wearout@P {)S
0 443.16 540 453.68 SHD
446.32 Z
FRN
1 T (216)S 1 T FRB
(    setpayloadprop\("current-wearout-percentage",)S
0 432.63 540 443.16 SHD
435.79 Z
FRN
1 T (217)S 1 T FRB
(    payloadprop\("current-ssm-wearout"\)\))S
0 422.11 540 432.63 SHD
425.26 Z
FRN
1 T (218)S 1 T FRB
(    && setpayloadprop\("threshold-wearout-percentage",)S
0 411.58 540 422.11 SHD
414.74 Z
FRN
1 T (219)S 1 T FRB
(    payloadprop\("threshold-ssm-wearout"\)\) };)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 2
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:33:45 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/disk-monitor/disk_monitor.c)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    8882 Sat Apr 29 19:33:42 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/modules/common/disk-monitor/disk_monitor.c)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
414.74 Z
2 T (22)S 1 T (/*)S
404.21 Z
2 T (23)S 1 T ( * Copyright 2009 Sun Microsystems, Inc.  All rights reserved.)S
393.68 Z
2 T (24)S 1 T ( * Use is subject to license terms.)S
FRB
0 380.00 540 390.53 SHD
383.16 Z
FRN
2 T (25)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
372.63 Z
2 T (26)S 1 T ( */)S
351.58 Z
2 T (28)S 1 T (/*)S
341.05 Z
2 T (29)S 1 T ( * Disk Monitor)S
330.53 Z
2 T (30)S 1 T ( */)S
320.00 Z
2 T (31)S 1 T (#include <sys/types.h>)S
309.47 Z
2 T (32)S 1 T (#include <sys/stat.h>)S
298.95 Z
2 T (33)S 1 T (#include <fcntl.h>)S
288.42 Z
2 T (34)S 1 T (#include <time.h>)S
277.90 Z
2 T (35)S 1 T (#include <stdio.h>)S
267.37 Z
2 T (36)S 1 T (#include <stdlib.h>)S
256.84 Z
2 T (37)S 1 T (#include <strings.h>)S
246.32 Z
2 T (38)S 1 T (#include <stdarg.h>)S
235.79 Z
2 T (39)S 1 T (#include <errno.h>)S
225.26 Z
2 T (40)S 1 T (#include <signal.h>)S
214.74 Z
2 T (41)S 1 T (#include <unistd.h>)S
204.21 Z
2 T (42)S 1 T (#include <pthread.h>)S
193.68 Z
2 T (43)S 1 T (#include <libnvpair.h>)S
183.16 Z
2 T (44)S 1 T (#include <fm/fmd_api.h>)S
172.63 Z
2 T (45)S 1 T (#include <fm/fmd_fmri.h>)S
162.11 Z
2 T (46)S 1 T (#include <sys/fm/protocol.h>)S
151.58 Z
2 T (47)S 1 T (#include <sys/fm/io/disk.h>)S
141.05 Z
2 T (48)S 1 T (#include <fm/libtopo.h>)S
120.00 Z
2 T (50)S 1 T (#include "disk_monitor.h")S
109.47 Z
2 T (51)S 1 T (#include "hotplug_mgr.h")S
98.95 Z
2 T (52)S 1 T (#include "schg_mgr.h")S
88.42 Z
2 T (53)S 1 T (#include "topo_gather.h")S
77.90 Z
2 T (54)S 1 T (#include "dm_platform.h")S
56.84 Z
2 T (56)S 1 T (#define)S 1 T (THIS_FMD_MODULE_NAME "disk-monitor")S
35.79 Z
2 T (58)S 1 T (static enum disk_init_state {)S
25.26 Z
2 T (59)S 1 T 8 T (INIT_STATE_NONE = 0,)S
14.74 Z
2 T (60)S 1 T 8 T (STATE_CHANGE_MGR_INITTED = 2,)S
4.21 Z
2 T (61)S 1 T 8 T (HOTPLUG_MGR_INITTED = 4)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/disk-monitor/disk_monitor.c)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (62)S 1 T (} g_init_state = INIT_STATE_NONE;)S
FIB
677.89 Z
(______unchanged_portion_omitted_)S
FRN
656.84 Z
1 T (144)S 1 T (static void)S
646.32 Z
1 T (145)S 1 T (dm_fault_execute_actions\(fmd_hdl_t *hdl, diskmon_t *diskp, nvlist_t *nvl\))S
635.79 Z
1 T (146)S 1 T ({)S
625.26 Z
1 T (147)S 1 T 8 T (const char)S 14 T (*action_prop = NULL;)S
614.74 Z
1 T (148)S 1 T 8 T (const char)S 14 T (*action_string;)S
593.68 Z
1 T (150)S 1 T 8 T (/*)S
583.16 Z
1 T (151)S 1 T 8 T ( * The predictive failure action is the activation of the fault)S
572.63 Z
1 T (152)S 1 T 8 T ( * indicator.)S
562.11 Z
1 T (153)S 1 T 8 T ( */)S
551.58 Z
1 T (154)S 1 T 8 T (if \(fmd_nvl_class_match\(hdl, nvl,)S
541.05 Z
1 T (155)S 1 T 8 T (    DISK_ERROR_CLASS "." FM_FAULT_DISK_OVERTEMP\)\))S
530.53 Z
1 T (156)S 1 T 16 T (action_prop = DISK_PROP_OTEMPACTION;)S
509.47 Z
1 T (158)S 1 T 8 T (if \(fmd_nvl_class_match\(hdl, nvl,)S
498.95 Z
1 T (159)S 1 T 8 T (    DISK_ERROR_CLASS "." FM_FAULT_DISK_TESTFAIL\)\))S
488.42 Z
1 T (160)S 1 T 16 T (action_prop = DISK_PROP_STFAILACTION;)S
FRB
0 464.21 540 474.74 SHD
467.37 Z
FRN
1 T (162)S 1 T FRB
8 T (if \(fmd_nvl_class_match\(hdl, nvl,)S
0 453.68 540 464.21 SHD
456.84 Z
FRN
1 T (163)S 1 T FRB
8 T (    DISK_ERROR_CLASS "." FM_FAULT_SSM_WEAROUT\)\))S
0 443.16 540 453.68 SHD
446.32 Z
FRN
1 T (164)S 1 T FRB
16 T (action_prop = DISK_PROP_SSMWEAROUTACTION;)S
0 432.63 540 443.16 SHD
FRN
425.26 Z
1 T (166)S 1 T 8 T (dm_fault_indicator_set\(diskp, INDICATOR_ON\);)S
404.21 Z
1 T (168)S 1 T 8 T (if \(action_prop != NULL &&)S
393.68 Z
1 T (169)S 1 T 8 T (    \(action_string = dm_prop_lookup\(diskp->props, action_prop\)\))S
383.16 Z
1 T (170)S 1 T 8 T (    != NULL\) {)S
362.11 Z
1 T (172)S 1 T 16 T (if \(dm_platform_indicator_execute\(action_string\) != 0\) {)S
351.58 Z
1 T (173)S 1 T 24 T (log_warn\("Fault action `%s' did not successfully ")S
341.05 Z
1 T (174)S 1 T 24 T (    "complete.\\n", action_string\);)S
330.53 Z
1 T (175)S 1 T 16 T (})S
320.00 Z
1 T (176)S 1 T 8 T (})S
309.47 Z
1 T (177)S 1 T (})S
FIB
298.95 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 1
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:33:48 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/disk-monitor/diskmon_conf.h)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    6600 Sat Apr 29 19:33:46 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/modules/common/disk-monitor/diskmon_conf.h)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
414.74 Z
2 T (22)S 1 T (/*)S
404.21 Z
2 T (23)S 1 T ( * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
393.68 Z
2 T (24)S 1 T ( * Use is subject to license terms.)S
FRB
0 380.00 540 390.53 SHD
383.16 Z
FRN
2 T (25)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
372.63 Z
2 T (26)S 1 T ( */)S
351.58 Z
2 T (28)S 1 T (#ifndef _DISKMOND_CONF_H)S
341.05 Z
2 T (29)S 1 T (#define)S 1 T (_DISKMOND_CONF_H)S
FIN
0 316.84 540 327.37 SHD
320.00 Z
FRN
2 T (30)S 1 T FIN
(#pragma ident)S 3 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
0 306.32 540 316.84 SHD
FRN
298.95 Z
2 T (31)S 1 T (/*)S
288.42 Z
2 T (32)S 1 T ( * Configuration File data)S
277.90 Z
2 T (33)S 1 T ( */)S
256.84 Z
2 T (35)S 1 T (#ifdef __cplusplus)S
246.32 Z
2 T (36)S 1 T (extern "C" {)S
235.79 Z
2 T (37)S 1 T (#endif)S
214.74 Z
2 T (39)S 1 T (#include <sys/types.h>)S
204.21 Z
2 T (40)S 1 T (#include <pthread.h>)S
193.68 Z
2 T (41)S 1 T (#include <libnvpair.h>)S
183.16 Z
2 T (42)S 1 T (#include <fm/fmd_api.h>)S
172.63 Z
2 T (43)S 1 T (#include "dm_types.h")S
162.11 Z
2 T (44)S 1 T (#include "util.h")S
141.05 Z
2 T (46)S 1 T (#ifndef MIN)S
130.53 Z
2 T (47)S 1 T (#define)S 1 T (MIN\(x, y\) \(\(x\) < \(y\) ? \(x\) : \(y\)\))S
120.00 Z
2 T (48)S 1 T (#endif)S
98.95 Z
2 T (50)S 1 T (#ifndef MAX)S
88.42 Z
2 T (51)S 1 T (#define)S 1 T (MAX\(x, y\) \(\(x\) > \(y\) ? \(x\) : \(y\)\))S
77.90 Z
2 T (52)S 1 T (#endif)S
56.84 Z
2 T (54)S 1 T (#define)S 1 T (DEVICES_PREFIX "/devices")S
35.79 Z
2 T (56)S 1 T (#define)S 1 T (GLOBAL_PROP_LOG_LEVEL)S 11 T ("log-level")S
14.74 Z
2 T (58)S 1 T (/* Property names \(and values\) for the disk configuration file entity */)S
4.21 Z
2 T (59)S 1 T (#define)S 1 T (DISK_PROP_DEVPATH)S 15 T ("dev-path")S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/disk-monitor/diskmon_conf.h)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (60)S 1 T (#define)S 1 T (DISK_PROP_LOGNAME)S 15 T ("logical-path")S
677.89 Z
2 T (61)S 1 T (#define)S 1 T (DISK_PROP_FRUACTION)S 13 T ("fru-update-action")S
667.37 Z
2 T (62)S 1 T (#define)S 1 T (DISK_PROP_OTEMPACTION)S 11 T ("overtemp-action")S
656.84 Z
2 T (63)S 1 T (#define)S 1 T (DISK_PROP_STFAILACTION)S 10 T ("selftest-fail-action")S
FRB
0 643.16 540 653.68 SHD
646.32 Z
FRN
2 T (64)S 1 T FRB
(#define)S 1 T (DISK_PROP_SSMWEAROUTACTION)S 6 T ("ssm-wearout-action")S
FRN
625.26 Z
2 T (66)S 1 T (/* Properties for the "ap" subentity */)S
614.74 Z
2 T (67)S 1 T (#define)S 1 T (DISK_AP_PROP_APID "path")S
593.68 Z
2 T (69)S 1 T (#define)S 1 T (DEVPATH_MINOR_SEPARATOR ':')S
572.63 Z
2 T (71)S 1 T (#define)S 1 T (DEFAULT_FAULT_POLLING_INTERVAL 3600)S 5 T (/* seconds */)S
551.58 Z
2 T (73)S 1 T (#define)S 1 T (INDICATOR_FAULT_IDENTIFIER "FAULT")S
530.53 Z
2 T (75)S 1 T (typedef enum conf_err_e {)S
520.00 Z
2 T (76)S 1 T 8 T (E_NO_ERROR = 0,)S
509.47 Z
2 T (77)S 1 T 8 T (E_MULTIPLE_IND_LISTS_DEFINED,)S
498.95 Z
2 T (78)S 1 T 8 T (E_MULTIPLE_INDRULE_LISTS_DEFINED,)S
488.42 Z
2 T (79)S 1 T 8 T (E_INVALID_STATE_CHANGE,)S
477.89 Z
2 T (80)S 1 T 8 T (E_IND_MULTIPLY_DEFINED,)S
467.37 Z
2 T (81)S 1 T 8 T (E_IND_ACTION_REDUNDANT,)S
456.84 Z
2 T (82)S 1 T 8 T (E_IND_ACTION_CONFLICT,)S
446.32 Z
2 T (83)S 1 T 8 T (E_IND_MISSING_FAULT_ON,)S
435.79 Z
2 T (84)S 1 T 8 T (E_IND_MISSING_FAULT_OFF,)S
425.26 Z
2 T (85)S 1 T 8 T (E_INDRULE_REFERENCES_NONEXISTENT_IND_ACTION,)S
414.74 Z
2 T (86)S 1 T 8 T (E_DUPLICATE_STATE_TRANSITION)S
404.21 Z
2 T (87)S 1 T (} conf_err_t;)S
FIB
393.68 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 1
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:33:52 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/disk-transport/disk-transport.conf)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    1073 Sat Apr 29 19:33:50 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/modules/common/disk-transport/disk-transport.conf)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (#)S
625.26 Z
3 T (2)S 1 T (# CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T (#)S
604.21 Z
3 T (4)S 1 T (# The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T (# Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T (# You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T (#)S
562.11 Z
3 T (8)S 1 T (# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T (# or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T (# See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T (# and limitations under the License.)S
520.00 Z
2 T (12)S 1 T (#)S
509.47 Z
2 T (13)S 1 T (# When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T (# file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T (# If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T (# fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T (# information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T (#)S
446.32 Z
2 T (19)S 1 T (# CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T (#)S
425.26 Z
2 T (21)S 1 T (#)S
414.74 Z
2 T (22)S 1 T (# Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T (# Use is subject to license terms.)S
FRB
0 390.53 540 401.05 SHD
393.68 Z
FRN
2 T (24)S 1 T FRB
(# Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
383.16 Z
2 T (25)S 1 T (#)S
FRB
0 369.47 540 380.00 SHD
372.63 Z
FRN
2 T (26)S 1 T FRB
(#)S
0 358.95 540 369.47 SHD
362.11 Z
FRN
2 T (27)S 1 T FRB
(# To disable transport of "high solid state media used %" faults uncomment:)S
0 348.42 540 358.95 SHD
351.58 Z
FRN
2 T (28)S 1 T FRB
(# setprop ignore-ssm-wearout true)S
FIN
0 337.90 540 348.42 SHD
341.05 Z
FRN
2 T (25)S 1 T FIN
(#ident)S 2 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 1
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:33:55 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/disk-transport/disk_transport.c)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    9900 Sat Apr 29 19:33:53 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/modules/common/disk-transport/disk_transport.c)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
425.26 Z
2 T (21)S 1 T (/*)S
414.74 Z
2 T (22)S 1 T ( * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T ( * Use is subject to license terms.)S
FRB
0 390.53 540 401.05 SHD
393.68 Z
FRN
2 T (24)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
383.16 Z
2 T (25)S 1 T ( */)S
FIN
0 358.95 540 369.47 SHD
362.11 Z
FRN
2 T (26)S 1 T FIN
(#pragma ident)S 3 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
0 348.42 540 358.95 SHD
FRN
341.05 Z
2 T (27)S 1 T (/*)S
330.53 Z
2 T (28)S 1 T ( * Disk error transport module)S
320.00 Z
2 T (29)S 1 T ( *)S
309.47 Z
2 T (30)S 1 T ( * This transport module is responsible for translating between disk errors)S
298.95 Z
2 T (31)S 1 T ( * and FMA ereports.  It is a read-only transport module, and checks for the)S
288.42 Z
2 T (32)S 1 T ( * following failures:)S
277.90 Z
2 T (33)S 1 T ( *)S
267.37 Z
2 T (34)S 1 T ( *)S 6 T (- overtemp)S
256.84 Z
2 T (35)S 1 T ( *)S 6 T (- predictive failure)S
246.32 Z
2 T (36)S 1 T ( *)S 6 T (- self-test failure)S
FRB
0 232.63 540 243.16 SHD
235.79 Z
FRN
2 T (37)S 1 T FRB
( *)S 6 T (- solid state media wearout)S
FRN
225.26 Z
2 T (38)S 1 T ( *)S
214.74 Z
2 T (39)S 1 T ( * These failures are detected via the TOPO_METH_DISK_STATUS method, which)S
204.21 Z
2 T (40)S 1 T ( * leverages libdiskstatus to do the actual analysis.  This transport module is)S
193.68 Z
2 T (41)S 1 T ( * in charge of the following tasks:)S
183.16 Z
2 T (42)S 1 T ( *)S
172.63 Z
2 T (43)S 1 T ( *)S 6 T (- discovering available devices)S
162.11 Z
2 T (44)S 1 T ( *)S 6 T (- periodically checking devices)S
151.58 Z
2 T (45)S 1 T ( *)S 6 T (- managing device addition/removal)S
141.05 Z
2 T (46)S 1 T ( */)S
120.00 Z
2 T (48)S 1 T (#include <ctype.h>)S
109.47 Z
2 T (49)S 1 T (#include <fm/fmd_api.h>)S
98.95 Z
2 T (50)S 1 T (#include <fm/libdiskstatus.h>)S
88.42 Z
2 T (51)S 1 T (#include <fm/libtopo.h>)S
77.90 Z
2 T (52)S 1 T (#include <fm/topo_hc.h>)S
67.37 Z
2 T (53)S 1 T (#include <fm/topo_mod.h>)S
56.84 Z
2 T (54)S 1 T (#include <limits.h>)S
46.32 Z
2 T (55)S 1 T (#include <string.h>)S
35.79 Z
2 T (56)S 1 T (#include <sys/fm/io/scsi.h>)S
25.26 Z
2 T (57)S 1 T (#include <sys/fm/protocol.h>)S
4.21 Z
2 T (59)S 1 T (static struct dt_stat {)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/disk-transport/disk_transport.c)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (60)S 1 T 8 T (fmd_stat_t dropped;)S
677.89 Z
2 T (61)S 1 T (} dt_stats = {)S
FIB
667.37 Z
(______unchanged_portion_omitted_)S
FRN
646.32 Z
1 T (104)S 1 T (/*)S
635.79 Z
1 T (105)S 1 T ( * Check a single topo node for failure.  This simply invokes the disk status)S
625.26 Z
1 T (106)S 1 T ( * method, and generates any ereports as necessary.)S
614.74 Z
1 T (107)S 1 T ( */)S
604.21 Z
1 T (108)S 1 T (static int)S
593.68 Z
1 T (109)S 1 T (dt_analyze_disk\(topo_hdl_t *thp, tnode_t *node, void *arg\))S
583.16 Z
1 T (110)S 1 T ({)S
572.63 Z
1 T (111)S 1 T 8 T (nvlist_t *result;)S
562.11 Z
1 T (112)S 1 T 8 T (nvlist_t *fmri, *faults;)S
551.58 Z
1 T (113)S 1 T 8 T (char *protocol;)S
541.05 Z
1 T (114)S 1 T 8 T (int err;)S
530.53 Z
1 T (115)S 1 T 8 T (disk_monitor_t *dmp = arg;)S
FIN
0 516.84 540 527.37 SHD
520.00 Z
FRN
1 T (116)S 1 T FIN
8 T (uint64_t ena;)S
FRN
509.47 Z
1 T (116)S 1 T 8 T (nvpair_t *elem;)S
498.95 Z
1 T (117)S 1 T 8 T (boolean_t fault;)S
488.42 Z
1 T (118)S 1 T 8 T (nvlist_t *details;)S
477.89 Z
1 T (119)S 1 T 8 T (char *fmristr;)S
467.37 Z
1 T (120)S 1 T 8 T (nvlist_t *in = NULL;)S
446.32 Z
1 T (122)S 1 T 8 T (if \(topo_node_resource\(node, &fmri, &err\) != 0\) {)S
435.79 Z
1 T (123)S 1 T 16 T (fmd_hdl_error\(dmp->dm_hdl, "failed to get fmri: %s\\n",)S
425.26 Z
1 T (124)S 1 T 16 T (    topo_strerror\(err\)\);)S
414.74 Z
1 T (125)S 1 T 16 T (return \(TOPO_WALK_ERR\);)S
404.21 Z
1 T (126)S 1 T 8 T (})S
383.16 Z
1 T (128)S 1 T 8 T (if \(topo_hdl_nvalloc\(thp, &in, NV_UNIQUE_NAME\) != 0\) {)S
372.63 Z
1 T (129)S 1 T 16 T (nvlist_free\(fmri\);)S
362.11 Z
1 T (130)S 1 T 16 T (return \(TOPO_WALK_ERR\);)S
351.58 Z
1 T (131)S 1 T 8 T (})S
330.53 Z
1 T (133)S 1 T 8 T (if \(dmp->dm_sim_search\) {)S
320.00 Z
1 T (134)S 1 T 16 T (fmristr = NULL;)S
309.47 Z
1 T (135)S 1 T 16 T (if \(topo_fmri_nvl2str\(thp, fmri, &fmristr, &err\) == 0 &&)S
298.95 Z
1 T (136)S 1 T 16 T (    strstr\(fmristr, dmp->dm_sim_search\) != 0\))S
288.42 Z
1 T (137)S 1 T 24 T (\(void\) nvlist_add_string\(in, "path", dmp->dm_sim_file\);)S
277.90 Z
1 T (138)S 1 T 16 T (topo_hdl_strfree\(thp, fmristr\);)S
267.37 Z
1 T (139)S 1 T 8 T (})S
246.32 Z
1 T (141)S 1 T 8 T (/*)S
235.79 Z
1 T (142)S 1 T 8 T ( * Try to invoke the method.  If this fails \(most likely because the)S
225.26 Z
1 T (143)S 1 T 8 T ( * method is not supported\), then ignore this node.)S
214.74 Z
1 T (144)S 1 T 8 T ( */)S
204.21 Z
1 T (145)S 1 T 8 T (if \(topo_method_invoke\(node, TOPO_METH_DISK_STATUS,)S
193.68 Z
1 T (146)S 1 T 8 T (    TOPO_METH_DISK_STATUS_VERSION, in, &result, &err\) != 0\) {)S
183.16 Z
1 T (147)S 1 T 16 T (nvlist_free\(fmri\);)S
172.63 Z
1 T (148)S 1 T 16 T (nvlist_free\(in\);)S
162.11 Z
1 T (149)S 1 T 16 T (return \(TOPO_WALK_NEXT\);)S
151.58 Z
1 T (150)S 1 T 8 T (})S
130.53 Z
1 T (152)S 1 T 8 T (nvlist_free\(in\);)S
FIN
0 106.32 540 116.84 SHD
109.47 Z
FRN
1 T (155)S 1 T FIN
8 T (ena = fmd_event_ena_create\(dmp->dm_hdl\);)S
0 95.79 540 106.32 SHD
FRN
88.42 Z
1 T (154)S 1 T 8 T (/*)S
FRB
0 74.74 540 85.26 SHD
77.90 Z
FRN
1 T (155)S 1 T FRB
8 T ( * Check for faults and post ereport\(s\) if needed)S
FIN
0 64.21 540 74.74 SHD
67.37 Z
FRN
1 T (158)S 1 T FIN
8 T ( * Add any faults.)S
FRN
56.84 Z
1 T (156)S 1 T 8 T ( */)S
46.32 Z
1 T (157)S 1 T 8 T (if \(nvlist_lookup_nvlist\(result, "faults", &faults\) == 0 &&)S
35.79 Z
1 T (158)S 1 T 8 T (    nvlist_lookup_string\(result, "protocol", &protocol\) == 0\) {)S
25.26 Z
1 T (159)S 1 T 16 T (elem = NULL;)S
14.74 Z
1 T (160)S 1 T 16 T (while \(\(elem = nvlist_next_nvpair\(faults, elem\)\) != NULL\) {)S
4.21 Z
1 T (161)S 1 T 24 T (if \(nvpair_type\(elem\) != DATA_TYPE_BOOLEAN_VALUE\))S
EPG
1 FPG
%%Page: ? 2
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/disk-transport/disk_transport.c)S
530 709.47 M (3)S
FRN
688.42 Z
1 T (162)S 1 T 32 T (continue;)S
667.37 Z
1 T (164)S 1 T 24 T (\(void\) nvpair_value_boolean_value\(elem, &fault\);)S
656.84 Z
1 T (165)S 1 T 24 T (if \(!fault ||)S
646.32 Z
1 T (166)S 1 T 24 T (    nvlist_lookup_nvlist\(result, nvpair_name\(elem\),)S
635.79 Z
1 T (167)S 1 T 24 T (    &details\) != 0\))S
625.26 Z
1 T (168)S 1 T 32 T (continue;)S
FRB
0 601.05 540 611.58 SHD
604.21 Z
FRN
1 T (170)S 1 T FRB
24 T (if \(strcmp\(nvpair_name\(elem\),)S
0 590.53 540 601.05 SHD
593.68 Z
FRN
1 T (171)S 1 T FRB
24 T (    FM_EREPORT_SCSI_SSMWEAROUT\) == 0 &&)S
0 580.00 540 590.53 SHD
583.16 Z
FRN
1 T (172)S 1 T FRB
24 T (    fmd_prop_get_int32\(dmp->dm_hdl,)S
0 569.47 540 580.00 SHD
572.63 Z
FRN
1 T (173)S 1 T FRB
24 T (    "ignore-ssm-wearout"\) == FMD_B_TRUE\))S
0 558.95 540 569.47 SHD
562.11 Z
FRN
1 T (174)S 1 T FRB
32 T (continue;)S
0 548.42 540 558.95 SHD
FRN
541.05 Z
1 T (176)S 1 T 24 T (dt_post_ereport\(dmp->dm_hdl, dmp->dm_xprt, protocol,)S
FRB
0 527.37 540 537.89 SHD
530.53 Z
FRN
1 T (177)S 1 T FRB
24 T (    nvpair_name\(elem\),)S
0 516.84 540 527.37 SHD
520.00 Z
FRN
1 T (178)S 1 T FRB
24 T (    fmd_event_ena_create\(dmp->dm_hdl\), fmri, details\);)S
FIN
0 506.32 540 516.84 SHD
509.47 Z
FRN
1 T (174)S 1 T FIN
24 T (    nvpair_name\(elem\), ena, fmri, details\);)S
FRN
498.95 Z
1 T (179)S 1 T 16 T (})S
488.42 Z
1 T (180)S 1 T 8 T (})S
467.37 Z
1 T (182)S 1 T 8 T (nvlist_free\(result\);)S
456.84 Z
1 T (183)S 1 T 8 T (nvlist_free\(fmri\);)S
435.79 Z
1 T (185)S 1 T 8 T (return \(TOPO_WALK_NEXT\);)S
425.26 Z
1 T (186)S 1 T (})S
FIB
414.74 Z
(______unchanged_portion_omitted_)S
FRN
393.68 Z
1 T (251)S 1 T (static const fmd_prop_t fmd_props[] = {)S
383.16 Z
1 T (252)S 1 T 8 T ({ "interval", FMD_TYPE_TIME, "1h" },)S
372.63 Z
1 T (253)S 1 T 8 T ({ "min-interval", FMD_TYPE_TIME, "1min" },)S
362.11 Z
1 T (254)S 1 T 8 T ({ "simulate", FMD_TYPE_STRING, "" },)S
FRB
0 348.42 540 358.95 SHD
351.58 Z
FRN
1 T (255)S 1 T FRB
8 T ({ "ignore-ssm-wearout", FMD_TYPE_BOOL, "false"},)S
FRN
341.05 Z
1 T (256)S 1 T 8 T ({ NULL, 0, NULL })S
330.53 Z
1 T (257)S 1 T (};)S
FIB
320.00 Z
(______unchanged_portion_omitted_)S
FRN
298.95 Z
1 T (269)S 1 T (static const fmd_hdl_info_t fmd_info = {)S
FRB
0 285.26 540 295.79 SHD
288.42 Z
FRN
1 T (270)S 1 T FRB
8 T ("Disk Transport Agent", "1.1", &fmd_ops, fmd_props)S
FIN
0 274.74 540 285.26 SHD
277.90 Z
FRN
1 T (265)S 1 T FIN
8 T ("Disk Transport Agent", "1.0", &fmd_ops, fmd_props)S
FRN
267.37 Z
1 T (271)S 1 T (};)S
FIB
256.84 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 2
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:33:58 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/zfs-retire/zfs-retire.conf)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    1248 Sat Apr 29 19:33:57 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/modules/common/zfs-retire/zfs-retire.conf)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (#)S
625.26 Z
3 T (2)S 1 T (# CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T (#)S
604.21 Z
3 T (4)S 1 T (# The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T (# Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T (# You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T (#)S
562.11 Z
3 T (8)S 1 T (# You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T (# or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T (# See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T (# and limitations under the License.)S
520.00 Z
2 T (12)S 1 T (#)S
509.47 Z
2 T (13)S 1 T (# When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T (# file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T (# If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T (# fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T (# information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T (#)S
446.32 Z
2 T (19)S 1 T (# CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T (#)S
425.26 Z
2 T (21)S 1 T (#)S
414.74 Z
2 T (22)S 1 T (# Copyright 2009 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T (# Use is subject to license terms.)S
393.68 Z
2 T (24)S 1 T (#)S
383.16 Z
2 T (25)S 1 T (#)S
372.63 Z
2 T (26)S 1 T (# fmd configuration file for the zfs retire agent.)S
362.11 Z
2 T (27)S 1 T (#)S
FRB
0 348.42 540 358.95 SHD
351.58 Z
FRN
2 T (28)S 1 T FRB
(# To enable automated retire for SSM wearout faults uncomment the line below:)S
0 337.90 540 348.42 SHD
341.05 Z
FRN
2 T (29)S 1 T FRB
(# setprop ssm_wearout_skip_retire false)S
0 327.37 540 337.90 SHD
330.53 Z
FRN
2 T (30)S 1 T FRB
(#)S
FRN
320.00 Z
2 T (31)S 1 T (subscribe fault.fs.zfs.*)S
309.47 Z
2 T (32)S 1 T (subscribe fault.io.*)S
298.95 Z
2 T (33)S 1 T (subscribe resource.fs.zfs.removed)S
288.42 Z
2 T (34)S 1 T (subscribe resource.fs.zfs.statechange)S
277.90 Z
2 T (35)S 1 T (subscribe resource.sysevent.EC_zfs.ESC_ZFS_vdev_remove)S
EPG
1 FPG
%%Trailer
%%Pages: 1
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:34:02 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/zfs-retire/zfs_retire.c)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(   15649 Sat Apr 29 19:34:00 2017)S
0 667.37 M
667.37 Z
(new/usr/src/cmd/fm/modules/common/zfs-retire/zfs_retire.c)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
FIB
635.79 Z
(______unchanged_portion_omitted_)S
FRN
614.74 Z
1 T (350)S 1 T (/*ARGSUSED*/)S
604.21 Z
1 T (351)S 1 T (static void)S
593.68 Z
1 T (352)S 1 T (zfs_retire_recv\(fmd_hdl_t *hdl, fmd_event_t *ep, nvlist_t *nvl,)S
583.16 Z
1 T (353)S 1 T (    const char *class\))S
572.63 Z
1 T (354)S 1 T ({)S
562.11 Z
1 T (355)S 1 T 8 T (uint64_t pool_guid, vdev_guid;)S
551.58 Z
1 T (356)S 1 T 8 T (zpool_handle_t *zhp;)S
541.05 Z
1 T (357)S 1 T 8 T (nvlist_t *resource, *fault, *fru;)S
530.53 Z
1 T (358)S 1 T 8 T (nvlist_t **faults;)S
520.00 Z
1 T (359)S 1 T 8 T (uint_t f, nfaults;)S
509.47 Z
1 T (360)S 1 T 8 T (zfs_retire_data_t *zdp = fmd_hdl_getspecific\(hdl\);)S
498.95 Z
1 T (361)S 1 T 8 T (libzfs_handle_t *zhdl = zdp->zrd_hdl;)S
488.42 Z
1 T (362)S 1 T 8 T (boolean_t fault_device, degrade_device;)S
477.89 Z
1 T (363)S 1 T 8 T (boolean_t is_repair;)S
467.37 Z
1 T (364)S 1 T 8 T (char *scheme, *fmri;)S
456.84 Z
1 T (365)S 1 T 8 T (nvlist_t *vdev;)S
446.32 Z
1 T (366)S 1 T 8 T (char *uuid;)S
435.79 Z
1 T (367)S 1 T 8 T (int repair_done = 0;)S
425.26 Z
1 T (368)S 1 T 8 T (boolean_t retire;)S
414.74 Z
1 T (369)S 1 T 8 T (boolean_t is_disk;)S
404.21 Z
1 T (370)S 1 T 8 T (vdev_aux_t aux;)S
393.68 Z
1 T (371)S 1 T 8 T (topo_hdl_t *thp;)S
383.16 Z
1 T (372)S 1 T 8 T (int err;)S
362.11 Z
1 T (374)S 1 T 8 T (/*)S
351.58 Z
1 T (375)S 1 T 8 T ( * If this is a resource notifying us of device removal, then simply)S
341.05 Z
1 T (376)S 1 T 8 T ( * check for an available spare and continue.)S
330.53 Z
1 T (377)S 1 T 8 T ( */)S
320.00 Z
1 T (378)S 1 T 8 T (if \(strcmp\(class, "resource.fs.zfs.removed"\) == 0\) {)S
309.47 Z
1 T (379)S 1 T 16 T (if \(nvlist_lookup_uint64\(nvl, FM_EREPORT_PAYLOAD_ZFS_POOL_GUID,)S
298.95 Z
1 T (380)S 1 T 16 T (    &pool_guid\) != 0 ||)S
288.42 Z
1 T (381)S 1 T 16 T (    nvlist_lookup_uint64\(nvl, FM_EREPORT_PAYLOAD_ZFS_VDEV_GUID,)S
277.90 Z
1 T (382)S 1 T 16 T (    &vdev_guid\) != 0\))S
267.37 Z
1 T (383)S 1 T 24 T (return;)S
246.32 Z
1 T (385)S 1 T 16 T (if \(\(zhp = find_by_guid\(zhdl, pool_guid, vdev_guid,)S
235.79 Z
1 T (386)S 1 T 16 T (    &vdev\)\) == NULL\))S
225.26 Z
1 T (387)S 1 T 24 T (return;)S
204.21 Z
1 T (389)S 1 T 16 T (if \(fmd_prop_get_int32\(hdl, "spare_on_remove"\)\))S
193.68 Z
1 T (390)S 1 T 24 T (replace_with_spare\(hdl, zhp, vdev\);)S
183.16 Z
1 T (391)S 1 T 16 T (zpool_close\(zhp\);)S
172.63 Z
1 T (392)S 1 T 16 T (return;)S
162.11 Z
1 T (393)S 1 T 8 T (})S
141.05 Z
1 T (395)S 1 T 8 T (if \(strcmp\(class, FM_LIST_RESOLVED_CLASS\) == 0\))S
130.53 Z
1 T (396)S 1 T 16 T (return;)S
109.47 Z
1 T (398)S 1 T 8 T (if \(strcmp\(class, "resource.fs.zfs.statechange"\) == 0 ||)S
98.95 Z
1 T (399)S 1 T 8 T (    strcmp\(class,)S
88.42 Z
1 T (400)S 1 T 8 T (    "resource.sysevent.EC_zfs.ESC_ZFS_vdev_remove"\) == 0\) {)S
77.90 Z
1 T (401)S 1 T 16 T (zfs_vdev_repair\(hdl, nvl\);)S
67.37 Z
1 T (402)S 1 T 16 T (return;)S
56.84 Z
1 T (403)S 1 T 8 T (})S
35.79 Z
1 T (405)S 1 T 8 T (zfs_retire_clear_data\(hdl, zdp\);)S
14.74 Z
1 T (407)S 1 T 8 T (if \(strcmp\(class, FM_LIST_REPAIRED_CLASS\) == 0\))S
4.21 Z
1 T (408)S 1 T 16 T (is_repair = B_TRUE;)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/zfs-retire/zfs_retire.c)S
530 709.47 M (2)S
FRN
688.42 Z
1 T (409)S 1 T 8 T (else)S
677.89 Z
1 T (410)S 1 T 16 T (is_repair = B_FALSE;)S
656.84 Z
1 T (412)S 1 T 8 T (/*)S
646.32 Z
1 T (413)S 1 T 8 T ( * We subscribe to zfs faults as well as all repair events.)S
635.79 Z
1 T (414)S 1 T 8 T ( */)S
625.26 Z
1 T (415)S 1 T 8 T (if \(nvlist_lookup_nvlist_array\(nvl, FM_SUSPECT_FAULT_LIST,)S
614.74 Z
1 T (416)S 1 T 8 T (    &faults, &nfaults\) != 0\))S
604.21 Z
1 T (417)S 1 T 16 T (return;)S
583.16 Z
1 T (419)S 1 T 8 T (for \(f = 0; f < nfaults; f++\) {)S
572.63 Z
1 T (420)S 1 T 16 T (fault = faults[f];)S
551.58 Z
1 T (422)S 1 T 16 T (fault_device = B_FALSE;)S
541.05 Z
1 T (423)S 1 T 16 T (degrade_device = B_FALSE;)S
530.53 Z
1 T (424)S 1 T 16 T (is_disk = B_FALSE;)S
509.47 Z
1 T (426)S 1 T 16 T (if \(nvlist_lookup_boolean_value\(fault, FM_SUSPECT_RETIRE,)S
498.95 Z
1 T (427)S 1 T 16 T (    &retire\) == 0 && retire == 0\))S
488.42 Z
1 T (428)S 1 T 24 T (continue;)S
FRB
0 464.21 540 474.74 SHD
467.37 Z
FRN
1 T (430)S 1 T FRB
16 T (if \(fmd_nvl_class_match\(hdl, fault,)S
0 453.68 540 464.21 SHD
456.84 Z
FRN
1 T (431)S 1 T FRB
16 T (    "fault.io.disk.ssm-wearout"\) &&)S
0 443.16 540 453.68 SHD
446.32 Z
FRN
1 T (432)S 1 T FRB
16 T (    fmd_prop_get_int32\(hdl, "ssm_wearout_skip_retire"\) ==)S
0 432.63 540 443.16 SHD
435.79 Z
FRN
1 T (433)S 1 T FRB
16 T (    FMD_B_TRUE\) {)S
0 422.11 540 432.63 SHD
425.26 Z
FRN
1 T (434)S 1 T FRB
24 T (fmd_hdl_debug\(hdl, "zfs-retire: ignoring SSM fault"\);)S
0 411.58 540 422.11 SHD
414.74 Z
FRN
1 T (435)S 1 T FRB
24 T (continue;)S
0 401.05 540 411.58 SHD
404.21 Z
FRN
1 T (436)S 1 T FRB
16 T (})S
0 390.53 540 401.05 SHD
FRN
383.16 Z
1 T (438)S 1 T 16 T (/*)S
372.63 Z
1 T (439)S 1 T 16 T ( * While we subscribe to fault.fs.zfs.*, we only take action)S
362.11 Z
1 T (440)S 1 T 16 T ( * for faults targeting a specific vdev \(open failure or SERD)S
351.58 Z
1 T (441)S 1 T 16 T ( * failure\).  We also subscribe to fault.io.* events, so that)S
341.05 Z
1 T (442)S 1 T 16 T ( * faulty disks will be faulted in the ZFS configuration.)S
330.53 Z
1 T (443)S 1 T 16 T ( */)S
320.00 Z
1 T (444)S 1 T 16 T (if \(fmd_nvl_class_match\(hdl, fault, "fault.fs.zfs.vdev.io"\)\) {)S
309.47 Z
1 T (445)S 1 T 24 T (fault_device = B_TRUE;)S
298.95 Z
1 T (446)S 1 T 16 T (} else if \(fmd_nvl_class_match\(hdl, fault,)S
288.42 Z
1 T (447)S 1 T 16 T (    "fault.fs.zfs.vdev.checksum"\)\) {)S
277.90 Z
1 T (448)S 1 T 24 T (degrade_device = B_TRUE;)S
267.37 Z
1 T (449)S 1 T 16 T (} else if \(fmd_nvl_class_match\(hdl, fault,)S
256.84 Z
1 T (450)S 1 T 16 T (    "fault.fs.zfs.device"\)\) {)S
246.32 Z
1 T (451)S 1 T 24 T (fault_device = B_FALSE;)S
235.79 Z
1 T (452)S 1 T 16 T (} else if \(fmd_nvl_class_match\(hdl, fault, "fault.io.*"\)\) {)S
225.26 Z
1 T (453)S 1 T 24 T (is_disk = B_TRUE;)S
214.74 Z
1 T (454)S 1 T 24 T (fault_device = B_TRUE;)S
204.21 Z
1 T (455)S 1 T 16 T (} else {)S
193.68 Z
1 T (456)S 1 T 24 T (continue;)S
183.16 Z
1 T (457)S 1 T 16 T (})S
162.11 Z
1 T (459)S 1 T 16 T (if \(is_disk\) {)S
151.58 Z
1 T (460)S 1 T 24 T (/*)S
141.05 Z
1 T (461)S 1 T 24 T ( * This is a disk fault.  Lookup the FRU, convert it to)S
130.53 Z
1 T (462)S 1 T 24 T ( * an FMRI string, and attempt to find a matching vdev.)S
120.00 Z
1 T (463)S 1 T 24 T ( */)S
109.47 Z
1 T (464)S 1 T 24 T (if \(nvlist_lookup_nvlist\(fault, FM_FAULT_FRU,)S
98.95 Z
1 T (465)S 1 T 24 T (    &fru\) != 0 ||)S
88.42 Z
1 T (466)S 1 T 24 T (    nvlist_lookup_string\(fru, FM_FMRI_SCHEME,)S
77.90 Z
1 T (467)S 1 T 24 T (    &scheme\) != 0\))S
67.37 Z
1 T (468)S 1 T 32 T (continue;)S
46.32 Z
1 T (470)S 1 T 24 T (if \(strcmp\(scheme, FM_FMRI_SCHEME_HC\) != 0\))S
35.79 Z
1 T (471)S 1 T 32 T (continue;)S
14.74 Z
1 T (473)S 1 T 24 T (thp = fmd_hdl_topo_hold\(hdl, TOPO_VERSION\);)S
4.21 Z
1 T (474)S 1 T 24 T (if \(topo_fmri_nvl2str\(thp, fru, &fmri, &err\) != 0\) {)S
EPG
1 FPG
%%Page: ? 2
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/zfs-retire/zfs_retire.c)S
530 709.47 M (3)S
FRN
688.42 Z
1 T (475)S 1 T 32 T (fmd_hdl_topo_rele\(hdl, thp\);)S
677.89 Z
1 T (476)S 1 T 32 T (continue;)S
667.37 Z
1 T (477)S 1 T 24 T (})S
646.32 Z
1 T (479)S 1 T 24 T (zhp = find_by_fru\(zhdl, fmri, &vdev\);)S
635.79 Z
1 T (480)S 1 T 24 T (topo_hdl_strfree\(thp, fmri\);)S
625.26 Z
1 T (481)S 1 T 24 T (fmd_hdl_topo_rele\(hdl, thp\);)S
604.21 Z
1 T (483)S 1 T 24 T (if \(zhp == NULL\))S
593.68 Z
1 T (484)S 1 T 32 T (continue;)S
572.63 Z
1 T (486)S 1 T 24 T (\(void\) nvlist_lookup_uint64\(vdev,)S
562.11 Z
1 T (487)S 1 T 24 T (    ZPOOL_CONFIG_GUID, &vdev_guid\);)S
551.58 Z
1 T (488)S 1 T 24 T (aux = VDEV_AUX_EXTERNAL;)S
541.05 Z
1 T (489)S 1 T 16 T (} else {)S
530.53 Z
1 T (490)S 1 T 24 T (/*)S
520.00 Z
1 T (491)S 1 T 24 T ( * This is a ZFS fault.  Lookup the resource, and)S
509.47 Z
1 T (492)S 1 T 24 T ( * attempt to find the matching vdev.)S
498.95 Z
1 T (493)S 1 T 24 T ( */)S
488.42 Z
1 T (494)S 1 T 24 T (if \(nvlist_lookup_nvlist\(fault, FM_FAULT_RESOURCE,)S
477.89 Z
1 T (495)S 1 T 24 T (    &resource\) != 0 ||)S
467.37 Z
1 T (496)S 1 T 24 T (    nvlist_lookup_string\(resource, FM_FMRI_SCHEME,)S
456.84 Z
1 T (497)S 1 T 24 T (    &scheme\) != 0\))S
446.32 Z
1 T (498)S 1 T 32 T (continue;)S
425.26 Z
1 T (500)S 1 T 24 T (if \(strcmp\(scheme, FM_FMRI_SCHEME_ZFS\) != 0\))S
414.74 Z
1 T (501)S 1 T 32 T (continue;)S
393.68 Z
1 T (503)S 1 T 24 T (if \(nvlist_lookup_uint64\(resource, FM_FMRI_ZFS_POOL,)S
383.16 Z
1 T (504)S 1 T 24 T (    &pool_guid\) != 0\))S
372.63 Z
1 T (505)S 1 T 32 T (continue;)S
351.58 Z
1 T (507)S 1 T 24 T (if \(nvlist_lookup_uint64\(resource, FM_FMRI_ZFS_VDEV,)S
341.05 Z
1 T (508)S 1 T 24 T (    &vdev_guid\) != 0\) {)S
330.53 Z
1 T (509)S 1 T 32 T (if \(is_repair\))S
320.00 Z
1 T (510)S 1 T 40 T (vdev_guid = 0;)S
309.47 Z
1 T (511)S 1 T 32 T (else)S
298.95 Z
1 T (512)S 1 T 40 T (continue;)S
288.42 Z
1 T (513)S 1 T 24 T (})S
267.37 Z
1 T (515)S 1 T 24 T (if \(\(zhp = find_by_guid\(zhdl, pool_guid, vdev_guid,)S
256.84 Z
1 T (516)S 1 T 24 T (    &vdev\)\) == NULL\))S
246.32 Z
1 T (517)S 1 T 32 T (continue;)S
225.26 Z
1 T (519)S 1 T 24 T (aux = VDEV_AUX_ERR_EXCEEDED;)S
214.74 Z
1 T (520)S 1 T 16 T (})S
193.68 Z
1 T (522)S 1 T 16 T (if \(vdev_guid == 0\) {)S
183.16 Z
1 T (523)S 1 T 24 T (/*)S
172.63 Z
1 T (524)S 1 T 24 T ( * For pool-level repair events, clear the entire pool.)S
162.11 Z
1 T (525)S 1 T 24 T ( */)S
151.58 Z
1 T (526)S 1 T 24 T (\(void\) zpool_clear\(zhp, NULL, NULL\);)S
141.05 Z
1 T (527)S 1 T 24 T (zpool_close\(zhp\);)S
130.53 Z
1 T (528)S 1 T 24 T (continue;)S
120.00 Z
1 T (529)S 1 T 16 T (})S
98.95 Z
1 T (531)S 1 T 16 T (/*)S
88.42 Z
1 T (532)S 1 T 16 T ( * If this is a repair event, then mark the vdev as repaired and)S
77.90 Z
1 T (533)S 1 T 16 T ( * continue.)S
67.37 Z
1 T (534)S 1 T 16 T ( */)S
56.84 Z
1 T (535)S 1 T 16 T (if \(is_repair\) {)S
46.32 Z
1 T (536)S 1 T 24 T (repair_done = 1;)S
35.79 Z
1 T (537)S 1 T 24 T (\(void\) zpool_vdev_clear\(zhp, vdev_guid\);)S
25.26 Z
1 T (538)S 1 T 24 T (zpool_close\(zhp\);)S
14.74 Z
1 T (539)S 1 T 24 T (continue;)S
4.21 Z
1 T (540)S 1 T 16 T (})S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/cmd/fm/modules/common/zfs-retire/zfs_retire.c)S
530 709.47 M (4)S
FRN
677.89 Z
1 T (542)S 1 T 16 T (/*)S
667.37 Z
1 T (543)S 1 T 16 T ( * Actively fault the device if needed.)S
656.84 Z
1 T (544)S 1 T 16 T ( */)S
646.32 Z
1 T (545)S 1 T 16 T (if \(fault_device\))S
635.79 Z
1 T (546)S 1 T 24 T (\(void\) zpool_vdev_fault\(zhp, vdev_guid, aux\);)S
625.26 Z
1 T (547)S 1 T 16 T (if \(degrade_device\))S
614.74 Z
1 T (548)S 1 T 24 T (\(void\) zpool_vdev_degrade\(zhp, vdev_guid, aux\);)S
593.68 Z
1 T (550)S 1 T 16 T (/*)S
583.16 Z
1 T (551)S 1 T 16 T ( * Attempt to substitute a hot spare.)S
572.63 Z
1 T (552)S 1 T 16 T ( */)S
562.11 Z
1 T (553)S 1 T 16 T (replace_with_spare\(hdl, zhp, vdev\);)S
551.58 Z
1 T (554)S 1 T 16 T (zpool_close\(zhp\);)S
541.05 Z
1 T (555)S 1 T 8 T (})S
520.00 Z
1 T (557)S 1 T 8 T (if \(strcmp\(class, FM_LIST_REPAIRED_CLASS\) == 0 && repair_done &&)S
509.47 Z
1 T (558)S 1 T 8 T (    nvlist_lookup_string\(nvl, FM_SUSPECT_UUID, &uuid\) == 0\))S
498.95 Z
1 T (559)S 1 T 16 T (fmd_case_uuresolved\(hdl, uuid\);)S
488.42 Z
1 T (560)S 1 T (})S
FIB
477.89 Z
(______unchanged_portion_omitted_)S
FRN
456.84 Z
1 T (570)S 1 T (static const fmd_prop_t fmd_props[] = {)S
446.32 Z
1 T (571)S 1 T 8 T ({ "spare_on_remove", FMD_TYPE_BOOL, "true" },)S
FRB
0 432.63 540 443.16 SHD
435.79 Z
FRN
1 T (572)S 1 T FRB
8 T ({ "ssm_wearout_skip_retire", FMD_TYPE_BOOL, "true"},)S
FRN
425.26 Z
1 T (573)S 1 T 8 T ({ NULL, 0, NULL })S
414.74 Z
1 T (574)S 1 T (};)S
FIB
404.21 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 2
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:34:04 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_impl.h)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    2171 Sat Apr 29 19:34:03 2017)S
0 667.37 M
667.37 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_impl.h)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
425.26 Z
2 T (21)S 1 T (/*)S
414.74 Z
2 T (22)S 1 T ( * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T ( * Use is subject to license terms.)S
FRB
0 390.53 540 401.05 SHD
393.68 Z
FRN
2 T (24)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
383.16 Z
2 T (25)S 1 T ( */)S
362.11 Z
2 T (27)S 1 T (#ifndef)S 1 T (_DS_IMPL_H)S
351.58 Z
2 T (28)S 1 T (#define)S 1 T (_DS_IMPL_H)S
FIN
0 327.37 540 337.90 SHD
330.53 Z
FRN
2 T (29)S 1 T FIN
(#pragma ident)S 3 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
0 316.84 540 327.37 SHD
FRN
309.47 Z
2 T (30)S 1 T (#include <dlfcn.h>)S
298.95 Z
2 T (31)S 1 T (#include <libnvpair.h>)S
288.42 Z
2 T (32)S 1 T (#include <sys/types.h>)S
267.37 Z
2 T (34)S 1 T (#ifdef)S 2 T (__cplusplus)S
256.84 Z
2 T (35)S 1 T (extern "C" {)S
246.32 Z
2 T (36)S 1 T (#endif)S
225.26 Z
2 T (38)S 1 T (struct disk_status;)S
204.21 Z
2 T (40)S 1 T (typedef struct ds_transport {)S
193.68 Z
2 T (41)S 1 T 8 T (void)S 12 T (*\(*dt_open\)\(struct disk_status *\);)S
183.16 Z
2 T (42)S 1 T 8 T (void)S 12 T (\(*dt_close\)\(void *\);)S
172.63 Z
2 T (43)S 1 T 8 T (int)S 13 T (\(*dt_scan\)\(void *\);)S
162.11 Z
2 T (44)S 1 T (} ds_transport_t;)S
141.05 Z
2 T (46)S 1 T (struct disk_status {)S
130.53 Z
2 T (47)S 1 T 8 T (char)S 20 T (*ds_path;)S 7 T (/* path to device */)S
120.00 Z
2 T (48)S 1 T 8 T (int)S 21 T (ds_fd;)S 10 T (/* device file descriptor */)S
109.47 Z
2 T (49)S 1 T 8 T (ds_transport_t)S 10 T (*ds_transport;)S 2 T (/* associated transport */)S
98.95 Z
2 T (50)S 1 T 8 T (void)S 20 T (*ds_data;)S 7 T (/* transport-specific data */)S
88.42 Z
2 T (51)S 1 T 8 T (int)S 21 T (ds_faults;)S 6 T (/* mask of current faults */)S
77.90 Z
2 T (52)S 1 T 8 T (nvlist_t)S 16 T (*ds_overtemp;)S 3 T (/* overtemp */)S
67.37 Z
2 T (53)S 1 T 8 T (nvlist_t)S 16 T (*ds_predfail;)S 3 T (/* predict fail */)S
56.84 Z
2 T (54)S 1 T 8 T (nvlist_t)S 16 T (*ds_testfail;)S 3 T (/* self test fail */)S
FRB
0 43.16 540 53.68 SHD
46.32 Z
FRN
2 T (55)S 1 T FRB
8 T (nvlist_t)S 16 T (*ds_ssmwearout;)S 1 T (/* SSM wearout fail */)S
FRN
35.79 Z
2 T (56)S 1 T 8 T (int)S 21 T (ds_error;)S 7 T (/* last error */)S
25.26 Z
2 T (57)S 1 T 8 T (nvlist_t)S 16 T (*ds_state;)S 6 T (/* protocol state */)S
14.74 Z
2 T (58)S 1 T (};)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_impl.h)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (60)S 1 T (#define)S 1 T (DS_FAULT_OVERTEMP)S 7 T (0x1)S
677.89 Z
2 T (61)S 1 T (#define)S 1 T (DS_FAULT_PREDFAIL)S 7 T (0x2)S
667.37 Z
2 T (62)S 1 T (#define)S 1 T (DS_FAULT_TESTFAIL)S 7 T (0x4)S
FRB
0 653.68 540 664.21 SHD
656.84 Z
FRN
2 T (63)S 1 T FRB
(#define)S 1 T (DS_FAULT_SSMWEAROUT)S 5 T (0x8)S
FRN
635.79 Z
2 T (65)S 1 T (extern void dprintf\(const char *, ...\);)S
625.26 Z
2 T (66)S 1 T (extern void ddump\(const char *, const void *, size_t\);)S
614.74 Z
2 T (67)S 1 T (extern boolean_t ds_debug;)S
593.68 Z
2 T (69)S 1 T (extern int ds_set_errno\(struct disk_status *, int\);)S
572.63 Z
2 T (71)S 1 T (#ifdef)S 2 T (__cplusplus)S
562.11 Z
2 T (72)S 1 T (})S
FIB
551.58 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 1
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:34:07 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.c)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(   41447 Sat Apr 29 19:34:06 2017)S
0 667.37 M
667.37 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.c)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
425.26 Z
2 T (21)S 1 T (/*)S
414.74 Z
2 T (22)S 1 T ( * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T ( * Use is subject to license terms.)S
FRB
0 390.53 540 401.05 SHD
393.68 Z
FRN
2 T (24)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
383.16 Z
2 T (25)S 1 T ( */)S
FIN
0 358.95 540 369.47 SHD
362.11 Z
FRN
2 T (26)S 1 T FIN
(#pragma ident)S 3 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
0 348.42 540 358.95 SHD
FRN
341.05 Z
2 T (27)S 1 T (#include <assert.h>)S
330.53 Z
2 T (28)S 1 T (#include <errno.h>)S
320.00 Z
2 T (29)S 1 T (#include <libdiskstatus.h>)S
309.47 Z
2 T (30)S 1 T (#include <limits.h>)S
298.95 Z
2 T (31)S 1 T (#include <stdlib.h>)S
288.42 Z
2 T (32)S 1 T (#include <strings.h>)S
277.90 Z
2 T (33)S 1 T (#include <sys/fm/io/scsi.h>)S
256.84 Z
2 T (35)S 1 T (#include "ds_scsi.h")S
246.32 Z
2 T (36)S 1 T (#include "ds_scsi_sim.h")S
235.79 Z
2 T (37)S 1 T (#include "ds_scsi_uscsi.h")S
214.74 Z
2 T (39)S 1 T (typedef struct ds_scsi_info {)S
204.21 Z
2 T (40)S 1 T 8 T (disk_status_t)S 11 T (*si_dsp;)S
193.68 Z
2 T (41)S 1 T 8 T (void)S 20 T (*si_sim;)S
183.16 Z
2 T (42)S 1 T 8 T (int)S 21 T (si_cdblen;)S
172.63 Z
2 T (43)S 1 T 8 T (int)S 21 T (si_supp_mode;)S
162.11 Z
2 T (44)S 1 T 8 T (int)S 21 T (si_supp_log;)S
151.58 Z
2 T (45)S 1 T 8 T (int)S 21 T (si_extensions;)S
141.05 Z
2 T (46)S 1 T 8 T (int)S 21 T (si_reftemp;)S
130.53 Z
2 T (47)S 1 T 8 T (scsi_ms_hdrs_t)S 10 T (si_hdrs;)S
120.00 Z
2 T (48)S 1 T 8 T (scsi_ie_page_t)S 10 T (si_iec_current;)S
109.47 Z
2 T (49)S 1 T 8 T (scsi_ie_page_t)S 10 T (si_iec_changeable;)S
98.95 Z
2 T (50)S 1 T 8 T (nvlist_t)S 16 T (*si_state_modepage;)S
88.42 Z
2 T (51)S 1 T 8 T (nvlist_t)S 16 T (*si_state_logpage;)S
77.90 Z
2 T (52)S 1 T 8 T (nvlist_t)S 16 T (*si_state_iec;)S
67.37 Z
2 T (53)S 1 T (} ds_scsi_info_t;)S
FIB
56.84 Z
(______unchanged_portion_omitted_)S
FRN
35.79 Z
2 T (73)S 1 T (static int logpage_ie_verify\(ds_scsi_info_t *,)S
25.26 Z
2 T (74)S 1 T (    scsi_log_parameter_header_t *, int, nvlist_t *\);)S
14.74 Z
2 T (75)S 1 T (static int logpage_temp_verify\(ds_scsi_info_t *,)S
4.21 Z
2 T (76)S 1 T (    scsi_log_parameter_header_t *, int, nvlist_t *\);)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.c)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (77)S 1 T (static int logpage_selftest_verify\(ds_scsi_info_t *,)S
677.89 Z
2 T (78)S 1 T (    scsi_log_parameter_header_t *, int, nvlist_t *\);)S
FRB
0 664.21 540 674.74 SHD
667.37 Z
FRN
2 T (79)S 1 T FRB
(static int logpage_ssm_verify\(ds_scsi_info_t *,)S
0 653.68 540 664.21 SHD
656.84 Z
FRN
2 T (80)S 1 T FRB
(    scsi_log_parameter_header_t *, int, nvlist_t *\);)S
FRN
635.79 Z
2 T (82)S 1 T (static int logpage_ie_analyze\(ds_scsi_info_t *,)S
625.26 Z
2 T (83)S 1 T (    scsi_log_parameter_header_t *, int\);)S
614.74 Z
2 T (84)S 1 T (static int logpage_temp_analyze\(ds_scsi_info_t *,)S
604.21 Z
2 T (85)S 1 T (    scsi_log_parameter_header_t *, int\);)S
593.68 Z
2 T (86)S 1 T (static int logpage_selftest_analyze\(ds_scsi_info_t *,)S
583.16 Z
2 T (87)S 1 T (    scsi_log_parameter_header_t *, int\);)S
FRB
0 569.47 540 580.00 SHD
572.63 Z
FRN
2 T (88)S 1 T FRB
(static int logpage_ssm_analyze\(ds_scsi_info_t *,)S
0 558.95 540 569.47 SHD
562.11 Z
FRN
2 T (89)S 1 T FRB
(    scsi_log_parameter_header_t *, int\);)S
FRN
541.05 Z
2 T (91)S 1 T (static struct logpage_validation_entry log_validation[] = {)S
530.53 Z
2 T (92)S 1 T 8 T ({ LOGPAGE_IE,)S 11 T (LOGPAGE_SUPP_IE,)S
520.00 Z
2 T (93)S 1 T 8 T (    "informational-exceptions",)S
509.47 Z
2 T (94)S 1 T 8 T (    logpage_ie_verify,)S 2 T (logpage_ie_analyze },)S
498.95 Z
2 T (95)S 1 T 8 T ({ LOGPAGE_TEMP,)S 9 T (LOGPAGE_SUPP_TEMP,)S
488.42 Z
2 T (96)S 1 T 8 T (    "temperature",)S
477.89 Z
2 T (97)S 1 T 8 T (    logpage_temp_verify, logpage_temp_analyze },)S
467.37 Z
2 T (98)S 1 T 8 T ({ LOGPAGE_SELFTEST,)S 5 T (LOGPAGE_SUPP_SELFTEST,)S
456.84 Z
2 T (99)S 1 T 8 T (    "self-test",)S
FRB
0 443.16 540 453.68 SHD
446.32 Z
FRN
1 T (100)S 1 T FRB
8 T (    logpage_selftest_verify, logpage_selftest_analyze },)S
0 432.63 540 443.16 SHD
435.79 Z
FRN
1 T (101)S 1 T FRB
8 T ({ LOGPAGE_SSM,)S 10 T (LOGPAGE_SUPP_SSM,)S
0 422.11 540 432.63 SHD
425.26 Z
FRN
1 T (102)S 1 T FRB
8 T (    FM_EREPORT_SCSI_SSMWEAROUT,)S
0 411.58 540 422.11 SHD
414.74 Z
FRN
1 T (103)S 1 T FRB
8 T (    logpage_ssm_verify, logpage_ssm_analyze })S
FIN
0 401.05 540 411.58 SHD
404.21 Z
FRN
2 T (97)S 1 T FIN
8 T (    logpage_selftest_verify, logpage_selftest_analyze })S
FRN
393.68 Z
1 T (104)S 1 T (};)S
FIB
383.16 Z
(______unchanged_portion_omitted_)S
FRN
362.11 Z
1 T (765)S 1 T (/*)S
FRB
0 348.42 540 358.95 SHD
351.58 Z
FRN
1 T (766)S 1 T FRB
( * Verify the contents of the Solid State Media \(SSM\) log page.)S
0 337.90 540 348.42 SHD
341.05 Z
FRN
1 T (767)S 1 T FRB
( * As of SBC3r36 SSM log page contains one log parameter:)S
0 327.37 540 337.90 SHD
330.53 Z
FRN
1 T (768)S 1 T FRB
( * "Percentage Used Endurance Indicator" which is mandatory.)S
0 316.84 540 327.37 SHD
320.00 Z
FRN
1 T (769)S 1 T FRB
( * For the verification phase, we sanity check this parameter)S
0 306.32 540 316.84 SHD
309.47 Z
FRN
1 T (770)S 1 T FRB
( * by making sure it's present and it's length is set to 0x04.)S
0 295.79 540 306.32 SHD
298.95 Z
FRN
1 T (771)S 1 T FRB
( */)S
0 285.26 540 295.79 SHD
288.42 Z
FRN
1 T (772)S 1 T FRB
(static int)S
0 274.74 540 285.26 SHD
277.90 Z
FRN
1 T (773)S 1 T FRB
(logpage_ssm_verify\(ds_scsi_info_t *sip,)S
0 264.21 540 274.74 SHD
267.37 Z
FRN
1 T (774)S 1 T FRB
(    scsi_log_parameter_header_t *lphp, int log_length, nvlist_t *nvl\))S
0 253.68 540 264.21 SHD
256.84 Z
FRN
1 T (775)S 1 T FRB
({)S
0 243.16 540 253.68 SHD
246.32 Z
FRN
1 T (776)S 1 T FRB
8 T (ushort_t param_code;)S
0 232.63 540 243.16 SHD
235.79 Z
FRN
1 T (777)S 1 T FRB
8 T (int i, plen = 0;)S
0 222.11 540 232.63 SHD
0 211.58 540 222.11 SHD
214.74 Z
FRN
1 T (779)S 1 T FRB
8 T (for \(i = 0; i < log_length; i += plen\) {)S
0 201.05 540 211.58 SHD
204.21 Z
FRN
1 T (780)S 1 T FRB
16 T (lphp = \(scsi_log_parameter_header_t *\)\(\(char *\)lphp + plen\);)S
0 190.53 540 201.05 SHD
193.68 Z
FRN
1 T (781)S 1 T FRB
16 T (param_code = BE_16\(lphp->lph_param\);)S
0 180.00 540 190.53 SHD
0 169.47 540 180.00 SHD
172.63 Z
FRN
1 T (783)S 1 T FRB
16 T (switch \(param_code\) {)S
0 158.95 540 169.47 SHD
162.11 Z
FRN
1 T (784)S 1 T FRB
16 T (case LOGPARAM_PRCNT_USED:)S
0 148.42 540 158.95 SHD
151.58 Z
FRN
1 T (785)S 1 T FRB
24 T (if \(nvlist_add_boolean_value\(nvl,)S
0 137.90 540 148.42 SHD
141.05 Z
FRN
1 T (786)S 1 T FRB
24 T (    FM_EREPORT_SCSI_SSMWEAROUT, B_TRUE\) != 0\))S
0 127.37 540 137.90 SHD
130.53 Z
FRN
1 T (787)S 1 T FRB
32 T (return \(scsi_set_errno\(sip, EDS_NOMEM\)\);)S
0 116.84 540 127.37 SHD
120.00 Z
FRN
1 T (788)S 1 T FRB
24 T (if \(lphp->lph_length != LOGPARAM_PRCNT_USED_PARAM_LEN\) {)S
0 106.32 540 116.84 SHD
109.47 Z
FRN
1 T (789)S 1 T FRB
32 T (if \(nvlist_add_uint8\(nvl,)S
0 95.79 540 106.32 SHD
98.95 Z
FRN
1 T (790)S 1 T FRB
32 T (    "invalid-length", lphp->lph_length\) != 0\))S
0 85.26 540 95.79 SHD
88.42 Z
FRN
1 T (791)S 1 T FRB
40 T (return \(scsi_set_errno\(sip, EDS_NOMEM\)\);)S
0 74.74 540 85.26 SHD
0 64.21 540 74.74 SHD
67.37 Z
FRN
1 T (793)S 1 T FRB
32 T (dprintf\("solid state media logpage bad len\\n"\);)S
0 53.68 540 64.21 SHD
56.84 Z
FRN
1 T (794)S 1 T FRB
32 T (break;)S
0 43.16 540 53.68 SHD
46.32 Z
FRN
1 T (795)S 1 T FRB
24 T (})S
0 32.63 540 43.16 SHD
0 22.11 540 32.63 SHD
25.26 Z
FRN
1 T (797)S 1 T FRB
24 T (/* verification succeded */)S
0 11.58 540 22.11 SHD
14.74 Z
FRN
1 T (798)S 1 T FRB
24 T (return \(0\);)S
0 1.05 540 11.58 SHD
4.21 Z
FRN
1 T (799)S 1 T FRB
16 T (})S
EPG
1 FPG
%%Page: ? 2
FRB
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.c)S
530 709.47 M (3)S
0 685.26 540 695.79 SHD
0 674.74 540 685.26 SHD
677.89 Z
FRN
1 T (801)S 1 T FRB
16 T (plen = lphp->lph_length +)S
0 664.21 540 674.74 SHD
667.37 Z
FRN
1 T (802)S 1 T FRB
16 T (    sizeof \(scsi_log_parameter_header_t\);)S
0 653.68 540 664.21 SHD
656.84 Z
FRN
1 T (803)S 1 T FRB
8 T (})S
0 643.16 540 653.68 SHD
0 632.63 540 643.16 SHD
635.79 Z
FRN
1 T (805)S 1 T FRB
8 T (/* verification failed */)S
0 622.11 540 632.63 SHD
625.26 Z
FRN
1 T (806)S 1 T FRB
8 T (sip->si_supp_log &= ~LOGPAGE_SUPP_SSM;)S
0 611.58 540 622.11 SHD
614.74 Z
FRN
1 T (807)S 1 T FRB
8 T (return \(0\);)S
0 601.05 540 611.58 SHD
604.21 Z
FRN
1 T (808)S 1 T FRB
(})S
0 590.53 540 601.05 SHD
0 580.00 540 590.53 SHD
583.16 Z
FRN
1 T (810)S 1 T FRB
(/*)S
FRN
572.63 Z
1 T (811)S 1 T ( * Load the current IE mode pages)S
562.11 Z
1 T (812)S 1 T ( */)S
551.58 Z
1 T (813)S 1 T (static int)S
541.05 Z
1 T (814)S 1 T (load_ie_modepage\(ds_scsi_info_t *sip\))S
530.53 Z
1 T (815)S 1 T ({)S
520.00 Z
1 T (816)S 1 T 8 T (struct scsi_ms_hdrs junk_hdrs;)S
509.47 Z
1 T (817)S 1 T 8 T (int result;)S
498.95 Z
1 T (818)S 1 T 8 T (uint_t skey, asc, ascq;)S
477.89 Z
1 T (820)S 1 T 8 T (if \(!\(sip->si_supp_mode & MODEPAGE_SUPP_IEC\)\))S
467.37 Z
1 T (821)S 1 T 16 T (return \(0\);)S
446.32 Z
1 T (823)S 1 T 8 T (bzero\(&sip->si_iec_current, sizeof \(sip->si_iec_current\)\);)S
435.79 Z
1 T (824)S 1 T 8 T (bzero\(&sip->si_iec_changeable, sizeof \(sip->si_iec_changeable\)\);)S
414.74 Z
1 T (826)S 1 T 8 T (if \(\(result = scsi_mode_sense\(sip,)S
404.21 Z
1 T (827)S 1 T 8 T (    MODEPAGE_INFO_EXCPT, PC_CURRENT, &sip->si_iec_current,)S
393.68 Z
1 T (828)S 1 T 8 T (    MODEPAGE_INFO_EXCPT_LEN, &sip->si_hdrs, &skey, &asc,)S
383.16 Z
1 T (829)S 1 T 8 T (    &ascq\)\) == 0\) {)S
372.63 Z
1 T (830)S 1 T 16 T (result = scsi_mode_sense\(sip,)S
362.11 Z
1 T (831)S 1 T 16 T (    MODEPAGE_INFO_EXCPT, PC_CHANGEABLE,)S
351.58 Z
1 T (832)S 1 T 16 T (    &sip->si_iec_changeable,)S
341.05 Z
1 T (833)S 1 T 16 T (    MODEPAGE_INFO_EXCPT_LEN, &junk_hdrs, &skey, &asc, &ascq\);)S
330.53 Z
1 T (834)S 1 T 8 T (})S
309.47 Z
1 T (836)S 1 T 8 T (if \(result != 0\) {)S
298.95 Z
1 T (837)S 1 T 16 T (dprintf\("failed to get IEC modepage \(KEY=0x%x ")S
288.42 Z
1 T (838)S 1 T 16 T (    "ASC=0x%x ASCQ=0x%x\)", skey, asc, ascq\);)S
277.90 Z
1 T (839)S 1 T 16 T (sip->si_supp_mode &= ~MODEPAGE_SUPP_IEC;)S
267.37 Z
1 T (840)S 1 T 8 T (} else  {)S
256.84 Z
1 T (841)S 1 T 16 T (if \(nvlist_add_boolean_value\(sip->si_state_iec,)S
246.32 Z
1 T (842)S 1 T 16 T (    "dexcpt", sip->si_iec_current.ie_dexcpt\) != 0 ||)S
235.79 Z
1 T (843)S 1 T 16 T (    nvlist_add_boolean_value\(sip->si_state_iec,)S
225.26 Z
1 T (844)S 1 T 16 T (    "logerr", sip->si_iec_current.ie_logerr\) != 0 ||)S
214.74 Z
1 T (845)S 1 T 16 T (    nvlist_add_uint8\(sip->si_state_iec,)S
204.21 Z
1 T (846)S 1 T 16 T (    "mrie", sip->si_iec_current.ie_mrie\) != 0 ||)S
193.68 Z
1 T (847)S 1 T 16 T (    nvlist_add_boolean_value\(sip->si_state_iec,)S
183.16 Z
1 T (848)S 1 T 16 T (    "test", sip->si_iec_current.ie_test\) != 0 ||)S
172.63 Z
1 T (849)S 1 T 16 T (    nvlist_add_boolean_value\(sip->si_state_iec,)S
162.11 Z
1 T (850)S 1 T 16 T (    "ewasc", sip->si_iec_current.ie_ewasc\) != 0 ||)S
151.58 Z
1 T (851)S 1 T 16 T (    nvlist_add_boolean_value\(sip->si_state_iec,)S
141.05 Z
1 T (852)S 1 T 16 T (    "perf", sip->si_iec_current.ie_perf\) != 0 ||)S
130.53 Z
1 T (853)S 1 T 16 T (    nvlist_add_boolean_value\(sip->si_state_iec,)S
120.00 Z
1 T (854)S 1 T 16 T (    "ebf", sip->si_iec_current.ie_ebf\) != 0 ||)S
109.47 Z
1 T (855)S 1 T 16 T (    nvlist_add_uint32\(sip->si_state_iec,)S
98.95 Z
1 T (856)S 1 T 16 T (    "interval-timer",)S
88.42 Z
1 T (857)S 1 T 16 T (    BE_32\(sip->si_iec_current.ie_interval_timer\)\) != 0 ||)S
77.90 Z
1 T (858)S 1 T 16 T (    nvlist_add_uint32\(sip->si_state_iec,)S
67.37 Z
1 T (859)S 1 T 16 T (    "report-count",)S
56.84 Z
1 T (860)S 1 T 16 T (    BE_32\(sip->si_iec_current.ie_report_count\)\) != 0\))S
46.32 Z
1 T (861)S 1 T 24 T (return \(scsi_set_errno\(sip, EDS_NOMEM\)\);)S
35.79 Z
1 T (862)S 1 T 8 T (})S
14.74 Z
1 T (864)S 1 T 8 T (return \(0\);)S
4.21 Z
1 T (865)S 1 T (})S
FIB
-6.32 Z
(______unchanged_portion_omitted_)S
FRN
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.c)S
530 709.47 M (4)S
FRN
FRB
0 674.74 540 685.26 SHD
677.89 Z
FRN
0 T (1198)S 1 T FRB
(/*)S
0 664.21 540 674.74 SHD
667.37 Z
FRN
0 T (1199)S 1 T FRB
( * Analyze the contents of the Solid State Media \(SSM\) log page's)S
0 653.68 540 664.21 SHD
656.84 Z
FRN
0 T (1200)S 1 T FRB
( * "Percentage Used Endurance Indicator" log parameter.)S
0 643.16 540 653.68 SHD
646.32 Z
FRN
0 T (1201)S 1 T FRB
( * We generate a fault if the percentage used is equal to or over)S
0 632.63 540 643.16 SHD
635.79 Z
FRN
0 T (1202)S 1 T FRB
( * PRCNT_USED_FAULT_THRSH)S
0 622.11 540 632.63 SHD
625.26 Z
FRN
0 T (1203)S 1 T FRB
( */)S
0 611.58 540 622.11 SHD
614.74 Z
FRN
0 T (1204)S 1 T FRB
(static int)S
0 601.05 540 611.58 SHD
604.21 Z
FRN
0 T (1205)S 1 T FRB
(logpage_ssm_analyze\(ds_scsi_info_t *sip, scsi_log_parameter_header_t *lphp,)S
0 590.53 540 601.05 SHD
593.68 Z
FRN
0 T (1206)S 1 T FRB
(    int log_length\))S
0 580.00 540 590.53 SHD
583.16 Z
FRN
0 T (1207)S 1 T FRB
({)S
0 569.47 540 580.00 SHD
572.63 Z
FRN
0 T (1208)S 1 T FRB
8 T (uint16_t param_code;)S
0 558.95 540 569.47 SHD
562.11 Z
FRN
0 T (1209)S 1 T FRB
8 T (scsi_ssm_log_param_t *ssm;)S
0 548.42 540 558.95 SHD
551.58 Z
FRN
0 T (1210)S 1 T FRB
8 T (nvlist_t *nvl;)S
0 537.89 540 548.42 SHD
541.05 Z
FRN
0 T (1211)S 1 T FRB
8 T (int i, plen = 0;)S
0 527.37 540 537.89 SHD
0 516.84 540 527.37 SHD
520.00 Z
FRN
0 T (1213)S 1 T FRB
8 T (assert\(sip->si_dsp->ds_overtemp == NULL\);)S
0 506.32 540 516.84 SHD
509.47 Z
FRN
0 T (1214)S 1 T FRB
8 T (if \(nvlist_alloc\(&sip->si_dsp->ds_overtemp, NV_UNIQUE_NAME, 0\) != 0\))S
0 495.79 540 506.32 SHD
498.95 Z
FRN
0 T (1215)S 1 T FRB
16 T (return \(scsi_set_errno\(sip, EDS_NOMEM\)\);)S
0 485.26 540 495.79 SHD
488.42 Z
FRN
0 T (1216)S 1 T FRB
8 T (nvl = sip->si_dsp->ds_overtemp;)S
0 474.74 540 485.26 SHD
0 464.21 540 474.74 SHD
467.37 Z
FRN
0 T (1218)S 1 T FRB
8 T (for \(i = 0; i < log_length; i += plen\) {)S
0 453.68 540 464.21 SHD
456.84 Z
FRN
0 T (1219)S 1 T FRB
16 T (lphp = \(scsi_log_parameter_header_t *\)\(\(uint8_t *\)lphp + plen\);)S
0 443.16 540 453.68 SHD
446.32 Z
FRN
0 T (1220)S 1 T FRB
16 T (param_code = BE_16\(lphp->lph_param\);)S
0 432.63 540 443.16 SHD
435.79 Z
FRN
0 T (1221)S 1 T FRB
16 T (ssm = \(scsi_ssm_log_param_t *\)lphp;)S
0 422.11 540 432.63 SHD
0 411.58 540 422.11 SHD
414.74 Z
FRN
0 T (1223)S 1 T FRB
16 T (switch \(param_code\) {)S
0 401.05 540 411.58 SHD
404.21 Z
FRN
0 T (1224)S 1 T FRB
16 T (case LOGPARAM_PRCNT_USED:)S
0 390.53 540 401.05 SHD
393.68 Z
FRN
0 T (1225)S 1 T FRB
24 T (if \(lphp->lph_length != LOGPARAM_PRCNT_USED_PARAM_LEN\))S
0 380.00 540 390.53 SHD
383.16 Z
FRN
0 T (1226)S 1 T FRB
32 T (break;)S
0 369.47 540 380.00 SHD
0 358.95 540 369.47 SHD
362.11 Z
FRN
0 T (1228)S 1 T FRB
24 T (if \(\(nvlist_add_uint8\(nvl,)S
0 348.42 540 358.95 SHD
351.58 Z
FRN
0 T (1229)S 1 T FRB
24 T (    FM_EREPORT_PAYLOAD_SCSI_CURSSMWEAROUT,)S
0 337.90 540 348.42 SHD
341.05 Z
FRN
0 T (1230)S 1 T FRB
24 T (    ssm->ssm_prcnt_used\) != 0\) ||)S
0 327.37 540 337.90 SHD
330.53 Z
FRN
0 T (1231)S 1 T FRB
24 T (    \(nvlist_add_uint8\(nvl,)S
0 316.84 540 327.37 SHD
320.00 Z
FRN
0 T (1232)S 1 T FRB
24 T (    FM_EREPORT_PAYLOAD_SCSI_THRSHSSMWEAROUT,)S
0 306.32 540 316.84 SHD
309.47 Z
FRN
0 T (1233)S 1 T FRB
24 T (    PRCNT_USED_FAULT_THRSH\) != 0\)\))S
0 295.79 540 306.32 SHD
298.95 Z
FRN
0 T (1234)S 1 T FRB
32 T (return \(scsi_set_errno\(sip, EDS_NOMEM\)\);)S
0 285.26 540 295.79 SHD
0 274.74 540 285.26 SHD
277.90 Z
FRN
0 T (1236)S 1 T FRB
24 T (if \(ssm->ssm_prcnt_used >= PRCNT_USED_FAULT_THRSH\))S
0 264.21 540 274.74 SHD
267.37 Z
FRN
0 T (1237)S 1 T FRB
32 T (sip->si_dsp->ds_faults |= DS_FAULT_SSMWEAROUT;)S
0 253.68 540 264.21 SHD
0 243.16 540 253.68 SHD
246.32 Z
FRN
0 T (1239)S 1 T FRB
24 T (return \(0\);)S
0 232.63 540 243.16 SHD
235.79 Z
FRN
0 T (1240)S 1 T FRB
16 T (})S
0 222.11 540 232.63 SHD
0 211.58 540 222.11 SHD
214.74 Z
FRN
0 T (1242)S 1 T FRB
16 T (plen = lphp->lph_length +)S
0 201.05 540 211.58 SHD
204.21 Z
FRN
0 T (1243)S 1 T FRB
16 T (    sizeof \(scsi_log_parameter_header_t\);)S
0 190.53 540 201.05 SHD
193.68 Z
FRN
0 T (1244)S 1 T FRB
8 T (})S
0 180.00 540 190.53 SHD
0 169.47 540 180.00 SHD
172.63 Z
FRN
0 T (1246)S 1 T FRB
8 T (/*)S
0 158.95 540 169.47 SHD
162.11 Z
FRN
0 T (1247)S 1 T FRB
8 T ( * If we got this far we didn't see LOGPARAM_PRCNT_USED)S
0 148.42 540 158.95 SHD
151.58 Z
FRN
0 T (1248)S 1 T FRB
8 T ( * which is strange since we verified that it's there)S
0 137.90 540 148.42 SHD
141.05 Z
FRN
0 T (1249)S 1 T FRB
8 T ( */)S
0 127.37 540 137.90 SHD
130.53 Z
FRN
0 T (1250)S 1 T FRB
8 T (dprintf\("solid state media logpage analyze failed\\n"\);)S
0 116.84 540 127.37 SHD
120.00 Z
FRN
0 T (1251)S 1 T FRB
(#if DEBUG)S
0 106.32 540 116.84 SHD
109.47 Z
FRN
0 T (1252)S 1 T FRB
8 T (abort\(\);)S
0 95.79 540 106.32 SHD
98.95 Z
FRN
0 T (1253)S 1 T FRB
(#endif)S
0 85.26 540 95.79 SHD
88.42 Z
FRN
0 T (1254)S 1 T FRB
8 T (return \(scsi_set_errno\(sip, EDS_NOT_SUPPORTED\)\);)S
0 74.74 540 85.26 SHD
77.90 Z
FRN
0 T (1255)S 1 T FRB
(})S
0 64.21 540 74.74 SHD
FRN
56.84 Z
0 T (1257)S 1 T (/*)S
46.32 Z
0 T (1258)S 1 T ( * Analyze the IE mode sense page explicitly.  This is only needed if the IE log)S
35.79 Z
0 T (1259)S 1 T ( * page is not supported.)S
25.26 Z
0 T (1260)S 1 T ( */)S
14.74 Z
0 T (1261)S 1 T (static int)S
4.21 Z
0 T (1262)S 1 T (analyze_ie_sense\(ds_scsi_info_t *sip\))S
EPG
1 FPG
%%Page: ? 3
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.c)S
530 709.47 M (5)S
FRN
688.42 Z
0 T (1263)S 1 T ({)S
677.89 Z
0 T (1264)S 1 T 8 T (uint_t skey, asc, ascq;)S
667.37 Z
0 T (1265)S 1 T 8 T (nvlist_t *nvl;)S
646.32 Z
0 T (1267)S 1 T 8 T (/*)S
635.79 Z
0 T (1268)S 1 T 8 T ( * Don't bother checking if we weren't able to set our MRIE correctly.)S
625.26 Z
0 T (1269)S 1 T 8 T ( */)S
614.74 Z
0 T (1270)S 1 T 8 T (if \(sip->si_iec_current.ie_mrie != IE_REPORT_ON_REQUEST\))S
604.21 Z
0 T (1271)S 1 T 16 T (return \(0\);)S
583.16 Z
0 T (1273)S 1 T 8 T (if \(scsi_request_sense\(sip, &skey, &asc, &ascq\) != 0\) {)S
572.63 Z
0 T (1274)S 1 T 16 T (dprintf\("failed to request IE page \(KEY=0x%x ASC=0x%x ")S
562.11 Z
0 T (1275)S 1 T 16 T (    "ASCQ=0x%x\)\\n", skey, asc, ascq\);)S
551.58 Z
0 T (1276)S 1 T 16 T (return \(scsi_set_errno\(sip, EDS_IO\)\);)S
541.05 Z
0 T (1277)S 1 T 8 T (} else if \(skey == KEY_NO_SENSE\) {)S
530.53 Z
0 T (1278)S 1 T 16 T (assert\(sip->si_dsp->ds_predfail == NULL\);)S
520.00 Z
0 T (1279)S 1 T 16 T (if \(nvlist_alloc\(&sip->si_dsp->ds_predfail,)S
509.47 Z
0 T (1280)S 1 T 16 T (    NV_UNIQUE_NAME, 0\) != 0\))S
498.95 Z
0 T (1281)S 1 T 24 T (return \(scsi_set_errno\(sip, EDS_NOMEM\)\);)S
488.42 Z
0 T (1282)S 1 T 16 T (nvl = sip->si_dsp->ds_predfail;)S
467.37 Z
0 T (1284)S 1 T 16 T (if \(nvlist_add_uint8\(nvl,)S
456.84 Z
0 T (1285)S 1 T 16 T (    FM_EREPORT_PAYLOAD_SCSI_ASC, asc\) != 0 ||)S
446.32 Z
0 T (1286)S 1 T 16 T (    nvlist_add_uint8\(nvl,)S
435.79 Z
0 T (1287)S 1 T 16 T (    FM_EREPORT_PAYLOAD_SCSI_ASCQ, ascq\) != 0\) {)S
425.26 Z
0 T (1288)S 1 T 24 T (nvlist_free\(nvl\);)S
414.74 Z
0 T (1289)S 1 T 24 T (return \(scsi_set_errno\(sip, EDS_NOMEM\)\);)S
404.21 Z
0 T (1290)S 1 T 16 T (})S
383.16 Z
0 T (1292)S 1 T 16 T (if \(asc != 0\))S
372.63 Z
0 T (1293)S 1 T 24 T (sip->si_dsp->ds_faults |= DS_FAULT_PREDFAIL;)S
362.11 Z
0 T (1294)S 1 T 8 T (})S
341.05 Z
0 T (1296)S 1 T 8 T (return \(0\);)S
330.53 Z
0 T (1297)S 1 T (})S
FIB
320.00 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 3
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:34:10 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.h)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    8976 Sat Apr 29 19:34:09 2017)S
0 667.37 M
667.37 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.h)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
425.26 Z
2 T (21)S 1 T (/*)S
414.74 Z
2 T (22)S 1 T ( * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T ( * Use is subject to license terms.)S
FRB
0 390.53 540 401.05 SHD
393.68 Z
FRN
2 T (24)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
383.16 Z
2 T (25)S 1 T ( */)S
362.11 Z
2 T (27)S 1 T (#ifndef)S 1 T (_DS_SCSI_H)S
351.58 Z
2 T (28)S 1 T (#define)S 1 T (_DS_SCSI_H)S
FIN
0 327.37 540 337.90 SHD
330.53 Z
FRN
2 T (29)S 1 T FIN
(#pragma ident)S 3 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
0 316.84 540 327.37 SHD
FRN
309.47 Z
2 T (30)S 1 T (#include <sys/types.h>)S
298.95 Z
2 T (31)S 1 T (#include <sys/byteorder.h>)S
288.42 Z
2 T (32)S 1 T (#include <sys/scsi/scsi.h>)S
267.37 Z
2 T (34)S 1 T (#include "ds_impl.h")S
246.32 Z
2 T (36)S 1 T (#ifdef)S 2 T (__cplusplus)S
235.79 Z
2 T (37)S 1 T (extern "C" {)S
225.26 Z
2 T (38)S 1 T (#endif)S
204.21 Z
2 T (40)S 1 T (#if !defined\(_BIT_FIELDS_LTOH\) && !defined\(_BIT_FIELDS_HTOL\))S
193.68 Z
2 T (41)S 1 T (#error)S 2 T (One of _BIT_FIELDS_LTOH or _BIT_FIELDS_HTOL must be defined)S
183.16 Z
2 T (42)S 1 T (#endif)S
162.11 Z
2 T (44)S 1 T (/*)S
151.58 Z
2 T (45)S 1 T ( * Log page structures)S
141.05 Z
2 T (46)S 1 T ( */)S
130.53 Z
2 T (47)S 1 T (#pragma pack\(1\))S
109.47 Z
2 T (49)S 1 T (typedef struct scsi_log_header {)S
98.95 Z
2 T (50)S 1 T (#if defined\(_BIT_FIELDS_LTOH\))S
88.42 Z
2 T (51)S 1 T 8 T (uint8_t)S 9 T (lh_code : 6,)S
FRB
0 74.74 540 85.26 SHD
77.90 Z
FRN
2 T (52)S 1 T FRB
24 T (lh_spf : 1,)S
0 64.21 540 74.74 SHD
67.37 Z
FRN
2 T (53)S 1 T FRB
24 T (lh_ds : 1;)S
FIN
0 53.68 540 64.21 SHD
56.84 Z
FRN
2 T (53)S 1 T FIN
24 T (__reserved : 2;)S
FRN
46.32 Z
2 T (54)S 1 T (#else)S
FRB
0 32.63 540 43.16 SHD
35.79 Z
FRN
2 T (55)S 1 T FRB
8 T (uint8_t)S 9 T (lh_ds : 1,)S
0 22.11 540 32.63 SHD
25.26 Z
FRN
2 T (56)S 1 T FRB
24 T (lh_spf : 1,)S
FIN
0 11.58 540 22.11 SHD
14.74 Z
FRN
2 T (55)S 1 T FIN
8 T (uint8_t)S 9 T (__reserved : 2,)S
FRN
4.21 Z
2 T (57)S 1 T 24 T (lh_code : 6;)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.h)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (58)S 1 T (#endif)S
FRB
0 674.74 540 685.26 SHD
677.89 Z
FRN
2 T (59)S 1 T FRB
8 T (uint8_t)S 9 T (lh_subpage;)S
FIN
0 664.21 540 674.74 SHD
667.37 Z
FRN
2 T (58)S 1 T FIN
8 T (uint8_t)S 9 T (__reserved2;)S
FRN
656.84 Z
2 T (60)S 1 T 8 T (uint16_t)S 8 T (lh_length;)S
646.32 Z
2 T (61)S 1 T (} scsi_log_header_t;)S
FIB
635.79 Z
(______unchanged_portion_omitted_)S
FRN
614.74 Z
1 T (138)S 1 T (/* The results field of the self-test log parameter */)S
604.21 Z
1 T (139)S 1 T (#define)S 1 T (SELFTEST_OK)S 21 T (0x0)S
593.68 Z
1 T (140)S 1 T (#define)S 1 T (SELFTEST_ABORT_REQUEST)S 10 T (0x1)S
583.16 Z
1 T (141)S 1 T (#define)S 1 T (SELFTEST_ABORT_OTHER)S 12 T (0x2)S
572.63 Z
1 T (142)S 1 T (#define)S 1 T (SELFTEST_FAILURE_INCOMPLETE)S 5 T (0x3)S
562.11 Z
1 T (143)S 1 T (#define)S 1 T (SELFTEST_FAILURE_SEG_UNKNOWN)S 4 T (0x4)S
551.58 Z
1 T (144)S 1 T (#define)S 1 T (SELFTEST_FAILURE_SEG_FIRST)S 6 T (0x5)S
541.05 Z
1 T (145)S 1 T (#define)S 1 T (SELFTEST_FAILURE_SEG_SECOND)S 5 T (0x6)S
530.53 Z
1 T (146)S 1 T (#define)S 1 T (SELFTEST_FAILURE_SEG_OTHER)S 6 T (0x7)S
520.00 Z
1 T (147)S 1 T (#define)S 1 T (SELFTEST_INPROGRESS)S 13 T (0xf)S
498.95 Z
1 T (149)S 1 T (#define)S 1 T (SELFTEST_COMPLETE\(code\))S 25 T (\\)S
488.42 Z
1 T (150)S 1 T 8 T (\(\(code\) == SELFTEST_OK ||)S 23 T (\\)S
477.89 Z
1 T (151)S 1 T 8 T (\(\(code\) >= SELFTEST_FAILURE_INCOMPLETE &&)S 7 T (\\)S
467.37 Z
1 T (152)S 1 T 8 T (\(\(code\) <= SELFTEST_FAILURE_SEG_OTHER\)\)\))S
446.32 Z
1 T (154)S 1 T (#define)S 1 T (LOGPARAM_TEMP_CURTEMP)S 11 T (0x0000)S
435.79 Z
1 T (155)S 1 T (#define)S 1 T (LOGPARAM_TEMP_REFTEMP)S 11 T (0x0001)S
414.74 Z
1 T (157)S 1 T (#define)S 1 T (LOGPARAM_TEMP_LEN)S 7 T (\\)S
404.21 Z
1 T (158)S 1 T 8 T (\(sizeof \(scsi_temp_log_param_t\) - \\)S
393.68 Z
1 T (159)S 1 T 8 T (    sizeof \(scsi_log_parameter_header_t\)\))S
372.63 Z
1 T (161)S 1 T (/*)S
FRB
0 358.95 540 369.47 SHD
362.11 Z
FRN
1 T (162)S 1 T FRB
( * Described in SBC3)S
0 348.42 540 358.95 SHD
351.58 Z
FRN
1 T (163)S 1 T FRB
( */)S
0 337.90 540 348.42 SHD
341.05 Z
FRN
1 T (164)S 1 T FRB
(typedef struct scsi_ssm_log_param {)S
0 327.37 540 337.90 SHD
330.53 Z
FRN
1 T (165)S 1 T FRB
8 T (scsi_log_parameter_header_t ssm_hdr;)S
0 316.84 540 327.37 SHD
320.00 Z
FRN
1 T (166)S 1 T FRB
8 T (uint16_t)S 16 T (__reserved2;)S
0 306.32 540 316.84 SHD
309.47 Z
FRN
1 T (167)S 1 T FRB
8 T (uint8_t)S 17 T (__reserved1;)S
0 295.79 540 306.32 SHD
298.95 Z
FRN
1 T (168)S 1 T FRB
8 T (uchar_t)S 17 T (ssm_prcnt_used;)S
0 285.26 540 295.79 SHD
288.42 Z
FRN
1 T (169)S 1 T FRB
(} scsi_ssm_log_param_t;)S
0 274.74 540 285.26 SHD
0 264.21 540 274.74 SHD
267.37 Z
FRN
1 T (171)S 1 T FRB
(#define)S 1 T (LOGPARAM_PRCNT_USED)S 13 T (0x0001)S
0 253.68 540 264.21 SHD
256.84 Z
FRN
1 T (172)S 1 T FRB
(#define)S 1 T (LOGPARAM_PRCNT_USED_PARAM_LEN)S 3 T (0x04)S
0 243.16 540 253.68 SHD
246.32 Z
FRN
1 T (173)S 1 T FRB
(#define)S 1 T (PRCNT_USED_FAULT_THRSH)S 10 T (90)S
0 232.63 540 243.16 SHD
0 222.11 540 232.63 SHD
225.26 Z
FRN
1 T (175)S 1 T FRB
(/*)S
FRN
214.74 Z
1 T (176)S 1 T ( * Mode sense/select page header information)S
204.21 Z
1 T (177)S 1 T ( */)S
193.68 Z
1 T (178)S 1 T (typedef struct scsi_ms_header {)S
183.16 Z
1 T (179)S 1 T 8 T (struct mode_header)S 6 T (ms_header;)S
172.63 Z
1 T (180)S 1 T 8 T (struct block_descriptor)S 1 T (ms_descriptor;)S
162.11 Z
1 T (181)S 1 T (} scsi_ms_header_t;)S
FIB
151.58 Z
(______unchanged_portion_omitted_)S
FRN
130.53 Z
1 T (225)S 1 T (#pragma pack\(\))S
109.47 Z
1 T (227)S 1 T (#define)S 1 T (MODEPAGE_INFO_EXCPT_LEN)S 1 T (\(sizeof \(scsi_ie_page_t\)\))S
88.42 Z
1 T (229)S 1 T (#define)S 1 T (IEC_IE_ENABLED\(ies\) \(\(ies\).ie_dexcpt == 0\))S
77.90 Z
1 T (230)S 1 T (#define)S 1 T (IEC_IE_CHANGEABLE\(ies\) \(\(ies\).ie_dexcpt == 1\))S
67.37 Z
1 T (231)S 1 T (#define)S 1 T (IEC_MRIE_CHANGEABLE\(ies\) \(\(ies\).ie_mrie == 0xf\))S
56.84 Z
1 T (232)S 1 T (#define)S 1 T (IEC_PERF_CHANGEABLE\(ies\) \(\(ies\).ie_perf == 1\))S
46.32 Z
1 T (233)S 1 T (#define)S 1 T (IEC_EWASC_CHANGEABLE\(ies\) \(\(ies\).ie_ewasc == 1\))S
35.79 Z
1 T (234)S 1 T (#define)S 1 T (IEC_TEST_CHANGEABLE\(ies\) \(\(ies\).ie_test == 1\))S
25.26 Z
1 T (235)S 1 T (#define)S 1 T (IEC_RPTCNT_CHANGEABLE\(ies\) \(\(ies\).ie_report_count == BE_32\(0xffffffff\)\))S
14.74 Z
1 T (236)S 1 T (#define)S 1 T (IEC_LOGERR_CHANGEABLE\(ies\) \(\(ies\).ie_logerr == 1\))S
EPG
1 FPG
%%Page: ? 2
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.h)S
530 709.47 M (3)S
FRN
688.42 Z
1 T (238)S 1 T (/*)S
677.89 Z
1 T (239)S 1 T ( * Values for the MRIE field of the informational exceptions control mode page)S
667.37 Z
1 T (240)S 1 T ( */)S
656.84 Z
1 T (241)S 1 T (#define)S 1 T (IE_REPORT_NONE)S 18 T (0)S
646.32 Z
1 T (242)S 1 T (#define)S 1 T (IE_REPORT_ASYNCH)S 16 T (1)S
635.79 Z
1 T (243)S 1 T (#define)S 1 T (IE_REPORT_UNIT_ATTN)S 13 T (2)S
625.26 Z
1 T (244)S 1 T (#define)S 1 T (IE_REPORT_RECOV_ERR_COND)S 8 T (3)S
614.74 Z
1 T (245)S 1 T (#define)S 1 T (IE_REPORT_RECOV_ERR_ALWAYS)S 6 T (4)S
604.21 Z
1 T (246)S 1 T (#define)S 1 T (IE_REPORT_NO_SENSE)S 14 T (5)S
593.68 Z
1 T (247)S 1 T (#define)S 1 T (IE_REPORT_ON_REQUEST)S 12 T (6)S
572.63 Z
1 T (249)S 1 T (/*)S
562.11 Z
1 T (250)S 1 T ( * Constants in support of the CONTROL MODE mode page \(page 0xA\))S
551.58 Z
1 T (251)S 1 T ( */)S
541.05 Z
1 T (252)S 1 T (#define)S 1 T (MODEPAGE_CTRL_MODE_LEN)S 2 T (\(sizeof \(struct mode_control_scsi3\)\))S
530.53 Z
1 T (253)S 1 T (#define)S 1 T (GLTSD_CHANGEABLE\(chg\))S 3 T (\(\(chg\).gltsd == 1\))S
509.47 Z
1 T (255)S 1 T (#define)S 1 T (LOGPAGE_SELFTEST_MIN_PARAM_CODE)S 1 T (0x0001)S
498.95 Z
1 T (256)S 1 T (#define)S 1 T (LOGPAGE_SELFTEST_MAX_PARAM_CODE)S 1 T (0x0014)S
477.89 Z
1 T (258)S 1 T (#define)S 1 T (LOGPAGE_SELFTEST_PARAM_LEN \\)S
467.37 Z
1 T (259)S 1 T 8 T (\(\(sizeof \(scsi_selftest_log_param_t\)\) - \\)S
456.84 Z
1 T (260)S 1 T 8 T (    \(sizeof \(scsi_log_parameter_header_t\)\)\))S
435.79 Z
1 T (262)S 1 T (/*)S
425.26 Z
1 T (263)S 1 T ( * Macro to extract the length of a mode sense page)S
414.74 Z
1 T (264)S 1 T ( * as returned by a target.)S
404.21 Z
1 T (265)S 1 T ( */)S
393.68 Z
1 T (266)S 1 T (#define)S 1 T (MODESENSE_PAGE_LEN\(p\))S 3 T (\(\(\(int\)\(\(struct mode_page *\)p\)->length\) + \\)S
383.16 Z
1 T (267)S 1 T 40 T (sizeof \(struct mode_page\)\))S
362.11 Z
1 T (269)S 1 T (/*)S
351.58 Z
1 T (270)S 1 T ( * Mode Select options)S
341.05 Z
1 T (271)S 1 T ( */)S
330.53 Z
1 T (272)S 1 T (#define)S 1 T (MODE_SELECT_SP)S 18 T (0x01)S
320.00 Z
1 T (273)S 1 T (#define)S 1 T (MODE_SELECT_PF)S 18 T (0x10)S
288.42 Z
1 T (276)S 1 T (/*)S
277.90 Z
1 T (277)S 1 T ( * Mode Sense Page Control)S
267.37 Z
1 T (278)S 1 T ( */)S
256.84 Z
1 T (279)S 1 T (#define)S 1 T (PC_CURRENT)S 14 T (\(0 << 6\))S
246.32 Z
1 T (280)S 1 T (#define)S 1 T (PC_CHANGEABLE)S 11 T (\(1 << 6\))S
235.79 Z
1 T (281)S 1 T (#define)S 1 T (PC_DEFAULT)S 14 T (\(2 << 6\))S
225.26 Z
1 T (282)S 1 T (#define)S 1 T (PC_SAVED)S 16 T (\(3 << 6\))S
204.21 Z
1 T (284)S 1 T (/*)S
193.68 Z
1 T (285)S 1 T ( * Log Sense Page Control)S
183.16 Z
1 T (286)S 1 T ( */)S
172.63 Z
1 T (287)S 1 T (#define)S 1 T (PC_CUMULATIVE)S 11 T (\(1 << 6\))S
151.58 Z
1 T (289)S 1 T (/*)S
141.05 Z
1 T (290)S 1 T ( * LOG page codes)S
130.53 Z
1 T (291)S 1 T ( */)S
120.00 Z
1 T (292)S 1 T (#define)S 1 T (LOGPAGE_SUPP_LIST)S 7 T (0x00)S
109.47 Z
1 T (293)S 1 T (#define)S 1 T (LOGPAGE_TEMP)S 12 T (0x0d)S
98.95 Z
1 T (294)S 1 T (#define)S 1 T (LOGPAGE_SELFTEST)S 8 T (0x10)S
88.42 Z
1 T (295)S 1 T (#define)S 1 T (LOGPAGE_IE)S 14 T (0x2f)S
FRB
0 74.74 540 85.26 SHD
77.90 Z
FRN
1 T (296)S 1 T FRB
(/* Solid State Media log page code */)S
0 64.21 540 74.74 SHD
67.37 Z
FRN
1 T (297)S 1 T FRB
(#define)S 1 T (LOGPAGE_SSM)S 13 T (0x11)S
FRN
46.32 Z
1 T (299)S 1 T (/* ASC constants */)S
35.79 Z
1 T (300)S 1 T (#define)S 1 T (ASC_INVALID_OPCODE)S 30 T (0x20)S
25.26 Z
1 T (301)S 1 T (#define)S 1 T (ASC_INVALID_CDB_FIELD)S 27 T (0x24)S
14.74 Z
1 T (302)S 1 T (#define)S 1 T (ASC_FAILURE_PREDICTION_THRESHOLD_EXCEEDED)S 7 T (0x5d)S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/ds_scsi.h)S
530 709.47 M (4)S
FRN
688.42 Z
1 T (304)S 1 T (/* ASCQ constants */)S
677.89 Z
1 T (305)S 1 T (#define)S 1 T (ASCQ_INVALID_OPCODE)S 5 T (0)S
656.84 Z
1 T (307)S 1 T (/* Error tests */)S
646.32 Z
1 T (308)S 1 T (#define)S 1 T (SCSI_INVALID_OPCODE\(s, a, aq\) \\)S
635.79 Z
1 T (309)S 1 T 8 T (\(\(\(s\) == KEY_ILLEGAL_REQUEST\) && \(\(a\) == ASC_INVALID_OPCODE\) && \\)S
625.26 Z
1 T (310)S 1 T 8 T (\(\(aq\) == ASCQ_INVALID_OPCODE\)\))S
604.21 Z
1 T (312)S 1 T (#define)S 1 T (MODE_PAGE_UNSUPPORTED\(s, a, aq\) \\)S
593.68 Z
1 T (313)S 1 T 8 T (\(\(\(s\) == KEY_ILLEGAL_REQUEST\) && \(\(a\) == ASC_INVALID_CDB_FIELD\)\))S
572.63 Z
1 T (315)S 1 T (/* command length to use */)S
562.11 Z
1 T (316)S 1 T (#define)S 1 T (MODE_CMD_LEN_UNKNOWN)S 12 T (0)S
551.58 Z
1 T (317)S 1 T (#define)S 1 T (MODE_CMD_LEN_6)S 18 T (1)S
541.05 Z
1 T (318)S 1 T (#define)S 1 T (MODE_CMD_LEN_10)S 17 T (2)S
520.00 Z
1 T (320)S 1 T (/* supported modepages bitmask */)S
509.47 Z
1 T (321)S 1 T (#define)S 1 T (MODEPAGE_SUPP_IEC)S 15 T (0x1)S
488.42 Z
1 T (323)S 1 T (/* supported logpages bitmask */)S
477.89 Z
1 T (324)S 1 T (#define)S 1 T (LOGPAGE_SUPP_IE)S 17 T (0x1)S
467.37 Z
1 T (325)S 1 T (#define)S 1 T (LOGPAGE_SUPP_TEMP)S 15 T (0x2)S
456.84 Z
1 T (326)S 1 T (#define)S 1 T (LOGPAGE_SUPP_SELFTEST)S 11 T (0x4)S
FRB
0 443.16 540 453.68 SHD
446.32 Z
FRN
1 T (327)S 1 T FRB
(#define)S 1 T (LOGPAGE_SUPP_SSM)S 16 T (0x8)S
FRN
425.26 Z
1 T (329)S 1 T (#define)S 1 T (MSG_BUFLEN)S 6 T (256)S
404.21 Z
1 T (331)S 1 T (/*)S
393.68 Z
1 T (332)S 1 T ( * For SCSI commands which want to accept arbitrary length responses, we need to)S
383.16 Z
1 T (333)S 1 T ( * allocate an appropriate sized buffer.  The maximum length is USHRT_MAX,)S
372.63 Z
1 T (334)S 1 T ( * because some devices return nothing if the buffer length is too big.)S
362.11 Z
1 T (335)S 1 T ( */)S
351.58 Z
1 T (336)S 1 T (#define)S 1 T (MAX_BUFLEN\(type\))S 8 T (\(USHRT_MAX - sizeof \(type\)\))S
330.53 Z
1 T (338)S 1 T (extern ds_transport_t ds_scsi_uscsi_transport;)S
320.00 Z
1 T (339)S 1 T (extern ds_transport_t ds_scsi_sim_transport;)S
298.95 Z
1 T (341)S 1 T (#ifdef)S 2 T (__cplusplus)S
288.42 Z
1 T (342)S 1 T (})S
FIB
277.90 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 2
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:34:14 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/libdiskstatus.c)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    6045 Sat Apr 29 19:34:12 2017)S
0 667.37 M
667.37 Z
(new/usr/src/lib/fm/libdiskstatus/common/libdiskstatus.c)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
425.26 Z
2 T (21)S 1 T (/*)S
414.74 Z
2 T (22)S 1 T ( * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T ( * Use is subject to license terms.)S
FRB
0 390.53 540 401.05 SHD
393.68 Z
FRN
2 T (24)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
383.16 Z
2 T (25)S 1 T ( */)S
FIN
0 358.95 540 369.47 SHD
362.11 Z
FRN
2 T (26)S 1 T FIN
(#pragma ident)S 3 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
0 348.42 540 358.95 SHD
FRN
341.05 Z
2 T (27)S 1 T (/*)S
330.53 Z
2 T (28)S 1 T ( * Disk status library)S
320.00 Z
2 T (29)S 1 T ( *)S
309.47 Z
2 T (30)S 1 T ( * This library is responsible for querying health and other status information)S
298.95 Z
2 T (31)S 1 T ( * from disk drives.  It is intended to be a generic interface, however only)S
288.42 Z
2 T (32)S 1 T ( * SCSI \(and therefore SATA\) disks are currently supported.  The library is)S
277.90 Z
2 T (33)S 1 T ( * capable of detecting the following status conditions:)S
267.37 Z
2 T (34)S 1 T ( *)S
256.84 Z
2 T (35)S 1 T ( *)S 6 T (- Predictive failure)S
246.32 Z
2 T (36)S 1 T ( *)S 6 T (- Overtemp)S
235.79 Z
2 T (37)S 1 T ( *)S 6 T (- Self-test failure)S
FRB
0 222.11 540 232.63 SHD
225.26 Z
FRN
2 T (38)S 1 T FRB
( *)S 6 T (- Solid State Media wearout)S
FRN
214.74 Z
2 T (39)S 1 T ( */)S
193.68 Z
2 T (41)S 1 T (#include <assert.h>)S
183.16 Z
2 T (42)S 1 T (#include <errno.h>)S
172.63 Z
2 T (43)S 1 T (#include <fcntl.h>)S
162.11 Z
2 T (44)S 1 T (#include <libdevinfo.h>)S
151.58 Z
2 T (45)S 1 T (#include <libdiskstatus.h>)S
141.05 Z
2 T (46)S 1 T (#include <stdlib.h>)S
130.53 Z
2 T (47)S 1 T (#include <string.h>)S
120.00 Z
2 T (48)S 1 T (#include <sys/fm/io/scsi.h>)S
109.47 Z
2 T (49)S 1 T (#include <sys/stat.h>)S
98.95 Z
2 T (50)S 1 T (#include <unistd.h>)S
77.90 Z
2 T (52)S 1 T (#include "ds_impl.h")S
67.37 Z
2 T (53)S 1 T (#include "ds_scsi.h")S
46.32 Z
2 T (55)S 1 T (static ds_transport_t *ds_transports[] = {)S
35.79 Z
2 T (56)S 1 T 8 T (&ds_scsi_sim_transport,)S
25.26 Z
2 T (57)S 1 T 8 T (&ds_scsi_uscsi_transport)S
14.74 Z
2 T (58)S 1 T (};)S
FIB
4.21 Z
(______unchanged_portion_omitted_)S
FRN
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/libdiskstatus.c)S
530 709.47 M (2)S
FRN
677.89 Z
1 T (124)S 1 T (/*)S
667.37 Z
1 T (125)S 1 T ( * Close a handle to a disk.)S
656.84 Z
1 T (126)S 1 T ( */)S
646.32 Z
1 T (127)S 1 T (void)S
635.79 Z
1 T (128)S 1 T (disk_status_close\(disk_status_t *dsp\))S
625.26 Z
1 T (129)S 1 T ({)S
614.74 Z
1 T (130)S 1 T 8 T (nvlist_free\(dsp->ds_state\);)S
604.21 Z
1 T (131)S 1 T 8 T (nvlist_free\(dsp->ds_predfail\);)S
593.68 Z
1 T (132)S 1 T 8 T (nvlist_free\(dsp->ds_overtemp\);)S
583.16 Z
1 T (133)S 1 T 8 T (nvlist_free\(dsp->ds_testfail\);)S
FRB
0 569.47 540 580.00 SHD
572.63 Z
FRN
1 T (134)S 1 T FRB
8 T (nvlist_free\(dsp->ds_ssmwearout\);)S
FRN
562.11 Z
1 T (135)S 1 T 8 T (if \(dsp->ds_data\))S
551.58 Z
1 T (136)S 1 T 16 T (dsp->ds_transport->dt_close\(dsp->ds_data\);)S
541.05 Z
1 T (137)S 1 T 8 T (\(void\) close\(dsp->ds_fd\);)S
530.53 Z
1 T (138)S 1 T 8 T (free\(dsp->ds_path\);)S
520.00 Z
1 T (139)S 1 T 8 T (free\(dsp\);)S
509.47 Z
1 T (140)S 1 T (})S
FIB
498.95 Z
(______unchanged_portion_omitted_)S
FRN
477.89 Z
1 T (163)S 1 T (nvlist_t *)S
467.37 Z
1 T (164)S 1 T (disk_status_get\(disk_status_t *dsp\))S
456.84 Z
1 T (165)S 1 T ({)S
446.32 Z
1 T (166)S 1 T 8 T (nvlist_t *nvl = NULL;)S
435.79 Z
1 T (167)S 1 T 8 T (nvlist_t *faults = NULL;)S
425.26 Z
1 T (168)S 1 T 8 T (int err;)S
404.21 Z
1 T (170)S 1 T 8 T (/*)S
393.68 Z
1 T (171)S 1 T 8 T ( * Scan \(or rescan\) the current device.)S
383.16 Z
1 T (172)S 1 T 8 T ( */)S
372.63 Z
1 T (173)S 1 T 8 T (nvlist_free\(dsp->ds_testfail\);)S
362.11 Z
1 T (174)S 1 T 8 T (nvlist_free\(dsp->ds_predfail\);)S
351.58 Z
1 T (175)S 1 T 8 T (nvlist_free\(dsp->ds_overtemp\);)S
FRB
0 337.90 540 348.42 SHD
341.05 Z
FRN
1 T (176)S 1 T FRB
8 T (nvlist_free\(dsp->ds_ssmwearout\);)S
0 327.37 540 337.90 SHD
330.53 Z
FRN
1 T (177)S 1 T FRB
8 T (dsp->ds_ssmwearout = NULL;)S
FRN
320.00 Z
1 T (178)S 1 T 8 T (dsp->ds_testfail = dsp->ds_overtemp = dsp->ds_predfail = NULL;)S
309.47 Z
1 T (179)S 1 T 8 T (dsp->ds_faults = 0;)S
288.42 Z
1 T (181)S 1 T 8 T (/*)S
277.90 Z
1 T (182)S 1 T 8 T ( * Even if there is an I/O failure when trying to scan the device, we)S
267.37 Z
1 T (183)S 1 T 8 T ( * can still return the current state.)S
256.84 Z
1 T (184)S 1 T 8 T ( */)S
246.32 Z
1 T (185)S 1 T 8 T (if \(dsp->ds_transport->dt_scan\(dsp->ds_data\) != 0 &&)S
235.79 Z
1 T (186)S 1 T 8 T (    dsp->ds_error != EDS_IO\))S
225.26 Z
1 T (187)S 1 T 16 T (return \(NULL\);)S
204.21 Z
1 T (189)S 1 T 8 T (if \(\(err = nvlist_alloc\(&nvl, NV_UNIQUE_NAME, 0\)\) != 0\))S
193.68 Z
1 T (190)S 1 T 16 T (goto nverror;)S
172.63 Z
1 T (192)S 1 T 8 T (if \(\(err = nvlist_add_string\(nvl, "protocol", "scsi"\)\) != 0 ||)S
162.11 Z
1 T (193)S 1 T 8 T (    \(err = nvlist_add_nvlist\(nvl, "status", dsp->ds_state\)\) != 0\))S
151.58 Z
1 T (194)S 1 T 16 T (goto nverror;)S
130.53 Z
1 T (196)S 1 T 8 T (/*)S
120.00 Z
1 T (197)S 1 T 8 T ( * Construct the list of faults.)S
109.47 Z
1 T (198)S 1 T 8 T ( */)S
98.95 Z
1 T (199)S 1 T 8 T (if \(\(err = nvlist_alloc\(&faults, NV_UNIQUE_NAME, 0\)\) != 0\))S
88.42 Z
1 T (200)S 1 T 16 T (goto nverror;)S
67.37 Z
1 T (202)S 1 T 8 T (if \(dsp->ds_predfail != NULL\) {)S
56.84 Z
1 T (203)S 1 T 16 T (if \(\(err = nvlist_add_boolean_value\(faults,)S
46.32 Z
1 T (204)S 1 T 16 T (    FM_EREPORT_SCSI_PREDFAIL,)S
35.79 Z
1 T (205)S 1 T 16 T (    \(dsp->ds_faults & DS_FAULT_PREDFAIL\) != 0\)\) != 0 ||)S
25.26 Z
1 T (206)S 1 T 16 T (    \(err = nvlist_add_nvlist\(nvl, FM_EREPORT_SCSI_PREDFAIL,)S
14.74 Z
1 T (207)S 1 T 16 T (    dsp->ds_predfail\)\) != 0\))S
4.21 Z
1 T (208)S 1 T 24 T (goto nverror;)S
EPG
1 FPG
%%Page: ? 2
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/lib/fm/libdiskstatus/common/libdiskstatus.c)S
530 709.47 M (3)S
FRN
688.42 Z
1 T (209)S 1 T 8 T (})S
667.37 Z
1 T (211)S 1 T 8 T (if \(dsp->ds_testfail != NULL\) {)S
656.84 Z
1 T (212)S 1 T 16 T (if \(\(err = nvlist_add_boolean_value\(faults,)S
646.32 Z
1 T (213)S 1 T 16 T (    FM_EREPORT_SCSI_TESTFAIL,)S
635.79 Z
1 T (214)S 1 T 16 T (    \(dsp->ds_faults & DS_FAULT_TESTFAIL\) != 0\)\) != 0 ||)S
625.26 Z
1 T (215)S 1 T 16 T (    \(err = nvlist_add_nvlist\(nvl, FM_EREPORT_SCSI_TESTFAIL,)S
614.74 Z
1 T (216)S 1 T 16 T (    dsp->ds_testfail\)\) != 0\))S
604.21 Z
1 T (217)S 1 T 24 T (goto nverror;)S
593.68 Z
1 T (218)S 1 T 8 T (})S
572.63 Z
1 T (220)S 1 T 8 T (if \(dsp->ds_overtemp != NULL\) {)S
562.11 Z
1 T (221)S 1 T 16 T (if \(\(err = nvlist_add_boolean_value\(faults,)S
551.58 Z
1 T (222)S 1 T 16 T (    FM_EREPORT_SCSI_OVERTEMP,)S
541.05 Z
1 T (223)S 1 T 16 T (    \(dsp->ds_faults & DS_FAULT_OVERTEMP\) != 0\)\) != 0 ||)S
530.53 Z
1 T (224)S 1 T 16 T (    \(err = nvlist_add_nvlist\(nvl, FM_EREPORT_SCSI_OVERTEMP,)S
520.00 Z
1 T (225)S 1 T 16 T (    dsp->ds_overtemp\)\) != 0\))S
509.47 Z
1 T (226)S 1 T 24 T (goto nverror;)S
498.95 Z
1 T (227)S 1 T 8 T (})S
FRB
0 485.26 540 495.79 SHD
0 474.74 540 485.26 SHD
477.89 Z
FRN
1 T (229)S 1 T FRB
8 T (if \(dsp->ds_ssmwearout != NULL\) {)S
0 464.21 540 474.74 SHD
467.37 Z
FRN
1 T (230)S 1 T FRB
16 T (if \(\(err = nvlist_add_boolean_value\(faults,)S
0 453.68 540 464.21 SHD
456.84 Z
FRN
1 T (231)S 1 T FRB
16 T (    FM_EREPORT_SCSI_SSMWEAROUT,)S
0 443.16 540 453.68 SHD
446.32 Z
FRN
1 T (232)S 1 T FRB
16 T (    \(dsp->ds_faults & DS_FAULT_SSMWEAROUT\) != 0\)\) != 0 ||)S
0 432.63 540 443.16 SHD
435.79 Z
FRN
1 T (233)S 1 T FRB
16 T (    \(err = nvlist_add_nvlist\(nvl, FM_EREPORT_SCSI_SSMWEAROUT,)S
0 422.11 540 432.63 SHD
425.26 Z
FRN
1 T (234)S 1 T FRB
16 T (    dsp->ds_ssmwearout\)\) != 0\))S
0 411.58 540 422.11 SHD
414.74 Z
FRN
1 T (235)S 1 T FRB
24 T (goto nverror;)S
0 401.05 540 411.58 SHD
404.21 Z
FRN
1 T (236)S 1 T FRB
8 T (})S
FRN
383.16 Z
1 T (238)S 1 T 8 T (if \(\(err = nvlist_add_nvlist\(nvl, "faults", faults\)\) != 0\))S
372.63 Z
1 T (239)S 1 T 16 T (goto nverror;)S
351.58 Z
1 T (241)S 1 T 8 T (nvlist_free\(faults\);)S
341.05 Z
1 T (242)S 1 T 8 T (return \(nvl\);)S
320.00 Z
1 T (244)S 1 T (nverror:)S
309.47 Z
1 T (245)S 1 T 8 T (assert\(err == ENOMEM\);)S
298.95 Z
1 T (246)S 1 T 8 T (nvlist_free\(nvl\);)S
288.42 Z
1 T (247)S 1 T 8 T (nvlist_free\(faults\);)S
277.90 Z
1 T (248)S 1 T 8 T (\(void\) ds_set_errno\(dsp, EDS_NOMEM\);)S
267.37 Z
1 T (249)S 1 T 8 T (return \(NULL\);)S
256.84 Z
1 T (250)S 1 T (})S
FIB
246.32 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 2
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:34:18 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/uts/common/sys/fm/io/disk.h)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    1380 Sat Apr 29 19:34:15 2017)S
0 667.37 M
667.37 Z
(new/usr/src/uts/common/sys/fm/io/disk.h)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
425.26 Z
2 T (21)S 1 T (/*)S
414.74 Z
2 T (22)S 1 T ( * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T ( * Use is subject to license terms.)S
FRB
0 390.53 540 401.05 SHD
393.68 Z
FRN
2 T (24)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
383.16 Z
2 T (25)S 1 T ( */)S
362.11 Z
2 T (27)S 1 T (#ifndef)S 1 T (_SYS_FM_IO_DISK_H)S
351.58 Z
2 T (28)S 1 T (#define)S 1 T (_SYS_FM_IO_DISK_H)S
FIN
0 327.37 540 337.90 SHD
330.53 Z
FRN
2 T (29)S 1 T FIN
(#pragma ident)S 3 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
0 316.84 540 327.37 SHD
FRN
309.47 Z
2 T (30)S 1 T (#ifdef)S 2 T (__cplusplus)S
298.95 Z
2 T (31)S 1 T (extern "C" {)S
288.42 Z
2 T (32)S 1 T (#endif)S
267.37 Z
2 T (34)S 1 T (#define)S 1 T (DISK_ERROR_CLASS)S 16 T ("io.disk")S
246.32 Z
2 T (36)S 1 T (#define)S 1 T (FM_FAULT_DISK_PREDFAIL)S 10 T ("predictive-failure")S
235.79 Z
2 T (37)S 1 T (#define)S 1 T (FM_FAULT_DISK_OVERTEMP)S 10 T ("over-temperature")S
225.26 Z
2 T (38)S 1 T (#define)S 1 T (FM_FAULT_DISK_TESTFAIL)S 10 T ("self-test-failure")S
FRB
0 211.58 540 222.11 SHD
214.74 Z
FRN
2 T (39)S 1 T FRB
(#define)S 1 T (FM_FAULT_SSM_WEAROUT)S 12 T ("ssm-wearout")S
FRN
193.68 Z
2 T (41)S 1 T (#ifdef)S 2 T (__cplusplus)S
183.16 Z
2 T (42)S 1 T (})S
FIB
172.63 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 1
%!PS-Adobe-2.0
%%Creator: codereview on OmniOSdev
%%CreationDate: Sat Apr 29 19:34:21 2017
%%For: root
%%DocumentFonts: Courier Courier-Bold Courier-Oblique Courier-BoldOblique
%%Pages: (atend)
%%EndComments
%
% PostScript Prologue for lwlp LaserWriter Line Printer
%
/SFT {findfont exch scalefont setfont}bind def
/SWT {( ) stringwidth pop dup /W exch def neg /NW exch def}bind def
/SPG {/SV save def translate dup scale rotate}bind def
/EPG {SV restore}bind def
/FPG {/#copies exch def showpage}bind def
/B {NW 0 rmoveto}def
/M /moveto load def
/T {W mul 0 rmoveto}def
/S /show load def
/Z {0 exch moveto}bind def
/SHD {save 5 1 roll			% S x1 y1 x0 y0
	2 copy moveto			% S x1 y1 x0 y0
	3 index exch lineto		% S x1 y1 x0
	3 -1 roll 2 index lineto	% S y1 x0
	exch lineto			% S
	0.95 setgray fill		% S
	restore}def
%%EndProlog
/FRN {10.526316 /Courier SFT}bind def
/FRB {10.526316 /Courier-Bold SFT}bind def
/FIN {10.526316 /Courier-Oblique SFT}bind def
/FIB {10.526316 /Courier-BoldOblique SFT}bind def
%%Page: ? 1
FRN
0.250000 setlinewidth newpath
0 396 M 612 396 lineto
stroke
SWT 90 0.666666 546 18 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/uts/common/sys/fm/io/scsi.h)S
530 709.47 M (1)S
FRN
FIB
0 688.42 M
688.42 Z
(**********************************************************)S
0 677.89 M
677.89 Z
(    2175 Sat Apr 29 19:34:19 2017)S
0 667.37 M
667.37 Z
(new/usr/src/uts/common/sys/fm/io/scsi.h)S
0 656.84 M
656.84 Z
(8074 need to add FMA event for SSD wearout)S
0 646.32 M
646.32 Z
(**********************************************************)S
FRN
635.79 Z
3 T (1)S 1 T (/*)S
625.26 Z
3 T (2)S 1 T ( * CDDL HEADER START)S
614.74 Z
3 T (3)S 1 T ( *)S
604.21 Z
3 T (4)S 1 T ( * The contents of this file are subject to the terms of the)S
593.68 Z
3 T (5)S 1 T ( * Common Development and Distribution License \(the "License"\).)S
583.16 Z
3 T (6)S 1 T ( * You may not use this file except in compliance with the License.)S
572.63 Z
3 T (7)S 1 T ( *)S
562.11 Z
3 T (8)S 1 T ( * You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE)S
551.58 Z
3 T (9)S 1 T ( * or http://www.opensolaris.org/os/licensing.)S
541.05 Z
2 T (10)S 1 T ( * See the License for the specific language governing permissions)S
530.53 Z
2 T (11)S 1 T ( * and limitations under the License.)S
520.00 Z
2 T (12)S 1 T ( *)S
509.47 Z
2 T (13)S 1 T ( * When distributing Covered Code, include this CDDL HEADER in each)S
498.95 Z
2 T (14)S 1 T ( * file and include the License file at usr/src/OPENSOLARIS.LICENSE.)S
488.42 Z
2 T (15)S 1 T ( * If applicable, add the following below this CDDL HEADER, with the)S
477.89 Z
2 T (16)S 1 T ( * fields enclosed by brackets "[]" replaced with your own identifying)S
467.37 Z
2 T (17)S 1 T ( * information: Portions Copyright [yyyy] [name of copyright owner])S
456.84 Z
2 T (18)S 1 T ( *)S
446.32 Z
2 T (19)S 1 T ( * CDDL HEADER END)S
435.79 Z
2 T (20)S 1 T ( */)S
425.26 Z
2 T (21)S 1 T (/*)S
414.74 Z
2 T (22)S 1 T ( * Copyright 2007 Sun Microsystems, Inc.  All rights reserved.)S
404.21 Z
2 T (23)S 1 T ( * Use is subject to license terms.)S
FRB
0 390.53 540 401.05 SHD
393.68 Z
FRN
2 T (24)S 1 T FRB
( * Copyright 2016 Nexenta Systems, Inc.  All rights reserved.)S
FRN
383.16 Z
2 T (25)S 1 T ( */)S
362.11 Z
2 T (27)S 1 T (#ifndef)S 1 T (_SYS_FM_IO_SCSI_H)S
351.58 Z
2 T (28)S 1 T (#define)S 1 T (_SYS_FM_IO_SCSI_H)S
FIN
0 327.37 540 337.90 SHD
330.53 Z
FRN
2 T (29)S 1 T FIN
(#pragma ident)S 3 T ("%Z%%M%)S 1 T (%I%)S 5 T (%E% SMI")S
0 316.84 540 327.37 SHD
FRN
309.47 Z
2 T (30)S 1 T (#ifdef)S 2 T (__cplusplus)S
298.95 Z
2 T (31)S 1 T (extern "C" {)S
288.42 Z
2 T (32)S 1 T (#endif)S
267.37 Z
2 T (34)S 1 T (/*)S
256.84 Z
2 T (35)S 1 T ( * The following ereports are generated by the userland disk-transport module in)S
246.32 Z
2 T (36)S 1 T ( * response to errors reported by the disks.)S
235.79 Z
2 T (37)S 1 T ( */)S
225.26 Z
2 T (38)S 1 T (#define)S 1 T (SCSI_ERROR_CLASS)S 16 T ("io.scsi")S
204.21 Z
2 T (40)S 1 T (#define)S 1 T (SCSI_DISK_CLASS)S 17 T ("disk")S
183.16 Z
2 T (42)S 1 T (#define)S 1 T (FM_EREPORT_SCSI_PREDFAIL)S 8 T ("predictive-failure")S
172.63 Z
2 T (43)S 1 T (#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_ASC)S 5 T ("additional-sense-code")S
162.11 Z
2 T (44)S 1 T (#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_ASCQ)S 4 T ("additional-sense-code-qualifier")S
141.05 Z
2 T (46)S 1 T (#define)S 1 T (FM_EREPORT_SCSI_OVERTEMP)S 16 T ("over-temperature")S
130.53 Z
2 T (47)S 1 T (#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_CURTEMP)S 9 T ("current-temperature")S
120.00 Z
2 T (48)S 1 T (#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_THRESHTEMP)S 6 T ("threshold-temperature")S
FRB
0 95.79 540 106.32 SHD
98.95 Z
FRN
2 T (50)S 1 T FRB
(#define)S 1 T (FM_EREPORT_SCSI_SSMWEAROUT)S 14 T ("ssm-wearout")S
0 85.26 540 95.79 SHD
88.42 Z
FRN
2 T (51)S 1 T FRB
(#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_CURSSMWEAROUT)S 3 T ("current-ssm-wearout")S
0 74.74 540 85.26 SHD
77.90 Z
FRN
2 T (52)S 1 T FRB
(#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_THRSHSSMWEAROUT)S 1 T ("threshold-ssm-wearout")S
0 64.21 540 74.74 SHD
FRN
56.84 Z
2 T (54)S 1 T (#define)S 1 T (FM_EREPORT_SCSI_TESTFAIL)S 16 T ("self-test-failure")S
46.32 Z
2 T (55)S 1 T (#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_RESULTCODE)S 6 T ("result-code")S
35.79 Z
2 T (56)S 1 T (#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_ADDRESS)S 9 T ("address")S
25.26 Z
2 T (57)S 1 T (#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_TIMESTAMP)S 7 T ("timestamp")S
14.74 Z
2 T (58)S 1 T (#define)S 1 T (FM_EREPORT_PAYLOAD_SCSI_SEGMENT)S 9 T ("segment")S
EPG
FRN
SWT 90 0.666666 546 414 SPG
FRB
0 709.47 M
709.47 Z
(new/usr/src/uts/common/sys/fm/io/scsi.h)S
530 709.47 M (2)S
FRN
688.42 Z
2 T (60)S 1 T (#ifdef)S 2 T (__cplusplus)S
677.89 Z
2 T (61)S 1 T (})S
FIB
667.37 Z
(______unchanged_portion_omitted_)S
FRN
EPG
1 FPG
%%Trailer
%%Pages: 1
